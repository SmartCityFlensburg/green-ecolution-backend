/*
Green Space Management API

This is the API for the Green Ecolution Management System.

API version: develop
Contact: info@green-ecolution.de
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the VehicleCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VehicleCreate{}

// VehicleCreate struct for VehicleCreate
type VehicleCreate struct {
	Description    string         `json:"description"`
	DrivingLicense DrivingLicense `json:"driving_license"`
	Height         float32        `json:"height"`
	Length         float32        `json:"length"`
	Model          string         `json:"model"`
	NumberPlate    string         `json:"number_plate"`
	Status         VehicleStatus  `json:"status"`
	Type           VehicleType    `json:"type"`
	WaterCapacity  float32        `json:"water_capacity"`
	Width          float32        `json:"width"`
}

type _VehicleCreate VehicleCreate

// NewVehicleCreate instantiates a new VehicleCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVehicleCreate(description string, drivingLicense DrivingLicense, height float32, length float32, model string, numberPlate string, status VehicleStatus, type_ VehicleType, waterCapacity float32, width float32) *VehicleCreate {
	this := VehicleCreate{}
	this.Description = description
	this.DrivingLicense = drivingLicense
	this.Height = height
	this.Length = length
	this.Model = model
	this.NumberPlate = numberPlate
	this.Status = status
	this.Type = type_
	this.WaterCapacity = waterCapacity
	this.Width = width
	return &this
}

// NewVehicleCreateWithDefaults instantiates a new VehicleCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVehicleCreateWithDefaults() *VehicleCreate {
	this := VehicleCreate{}
	return &this
}

// GetDescription returns the Description field value
func (o *VehicleCreate) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *VehicleCreate) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *VehicleCreate) SetDescription(v string) {
	o.Description = v
}

// GetDrivingLicense returns the DrivingLicense field value
func (o *VehicleCreate) GetDrivingLicense() DrivingLicense {
	if o == nil {
		var ret DrivingLicense
		return ret
	}

	return o.DrivingLicense
}

// GetDrivingLicenseOk returns a tuple with the DrivingLicense field value
// and a boolean to check if the value has been set.
func (o *VehicleCreate) GetDrivingLicenseOk() (*DrivingLicense, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DrivingLicense, true
}

// SetDrivingLicense sets field value
func (o *VehicleCreate) SetDrivingLicense(v DrivingLicense) {
	o.DrivingLicense = v
}

// GetHeight returns the Height field value
func (o *VehicleCreate) GetHeight() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Height
}

// GetHeightOk returns a tuple with the Height field value
// and a boolean to check if the value has been set.
func (o *VehicleCreate) GetHeightOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Height, true
}

// SetHeight sets field value
func (o *VehicleCreate) SetHeight(v float32) {
	o.Height = v
}

// GetLength returns the Length field value
func (o *VehicleCreate) GetLength() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Length
}

// GetLengthOk returns a tuple with the Length field value
// and a boolean to check if the value has been set.
func (o *VehicleCreate) GetLengthOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Length, true
}

// SetLength sets field value
func (o *VehicleCreate) SetLength(v float32) {
	o.Length = v
}

// GetModel returns the Model field value
func (o *VehicleCreate) GetModel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *VehicleCreate) GetModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *VehicleCreate) SetModel(v string) {
	o.Model = v
}

// GetNumberPlate returns the NumberPlate field value
func (o *VehicleCreate) GetNumberPlate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NumberPlate
}

// GetNumberPlateOk returns a tuple with the NumberPlate field value
// and a boolean to check if the value has been set.
func (o *VehicleCreate) GetNumberPlateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumberPlate, true
}

// SetNumberPlate sets field value
func (o *VehicleCreate) SetNumberPlate(v string) {
	o.NumberPlate = v
}

// GetStatus returns the Status field value
func (o *VehicleCreate) GetStatus() VehicleStatus {
	if o == nil {
		var ret VehicleStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *VehicleCreate) GetStatusOk() (*VehicleStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *VehicleCreate) SetStatus(v VehicleStatus) {
	o.Status = v
}

// GetType returns the Type field value
func (o *VehicleCreate) GetType() VehicleType {
	if o == nil {
		var ret VehicleType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *VehicleCreate) GetTypeOk() (*VehicleType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *VehicleCreate) SetType(v VehicleType) {
	o.Type = v
}

// GetWaterCapacity returns the WaterCapacity field value
func (o *VehicleCreate) GetWaterCapacity() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.WaterCapacity
}

// GetWaterCapacityOk returns a tuple with the WaterCapacity field value
// and a boolean to check if the value has been set.
func (o *VehicleCreate) GetWaterCapacityOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WaterCapacity, true
}

// SetWaterCapacity sets field value
func (o *VehicleCreate) SetWaterCapacity(v float32) {
	o.WaterCapacity = v
}

// GetWidth returns the Width field value
func (o *VehicleCreate) GetWidth() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Width
}

// GetWidthOk returns a tuple with the Width field value
// and a boolean to check if the value has been set.
func (o *VehicleCreate) GetWidthOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Width, true
}

// SetWidth sets field value
func (o *VehicleCreate) SetWidth(v float32) {
	o.Width = v
}

func (o VehicleCreate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VehicleCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	toSerialize["driving_license"] = o.DrivingLicense
	toSerialize["height"] = o.Height
	toSerialize["length"] = o.Length
	toSerialize["model"] = o.Model
	toSerialize["number_plate"] = o.NumberPlate
	toSerialize["status"] = o.Status
	toSerialize["type"] = o.Type
	toSerialize["water_capacity"] = o.WaterCapacity
	toSerialize["width"] = o.Width
	return toSerialize, nil
}

func (o *VehicleCreate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"driving_license",
		"height",
		"length",
		"model",
		"number_plate",
		"status",
		"type",
		"water_capacity",
		"width",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVehicleCreate := _VehicleCreate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVehicleCreate)

	if err != nil {
		return err
	}

	*o = VehicleCreate(varVehicleCreate)

	return err
}

type NullableVehicleCreate struct {
	value *VehicleCreate
	isSet bool
}

func (v NullableVehicleCreate) Get() *VehicleCreate {
	return v.value
}

func (v *NullableVehicleCreate) Set(val *VehicleCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableVehicleCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableVehicleCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVehicleCreate(val *VehicleCreate) *NullableVehicleCreate {
	return &NullableVehicleCreate{value: val, isSet: true}
}

func (v NullableVehicleCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVehicleCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
