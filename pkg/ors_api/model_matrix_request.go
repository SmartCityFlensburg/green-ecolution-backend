/*
Openrouteservice

This is the openrouteservice API documentation for ORS Core-Version 9.0.0. Documentations for [older Core-Versions](https://github.com/GIScience/openrouteservice-docs/releases) can be rendered with the [Swagger-Editor](https://editor-next.swagger.io/).

API version: v2
Contact: support@smartmobility.heigit.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ors

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MatrixRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MatrixRequest{}

// MatrixRequest The JSON body request sent to the matrix service which defines options and parameters regarding the matrix to generate.
type MatrixRequest struct {
	// List of comma separated lists of `longitude,latitude` coordinates in WGS 84 (EPSG:4326)
	Locations [][]float64 `json:"locations"`
	ProfileName *string `json:"profileName,omitempty"`
	// Arbitrary identification string of the request reflected in the meta information.
	Id *string `json:"id,omitempty"`
	// A list of indices that refers to the list of locations (starting with `0`). `{index_1},{index_2}[,{index_N} ...]` or `all` (default). example `[0,3]` for the first and fourth locations 
	Sources []string `json:"sources,omitempty"`
	// A list of indices that refers to the list of locations (starting with `0`). `{index_1},{index_2}[,{index_N} ...]` or `all` (default). `[0,3]` for the first and fourth locations 
	Destinations []string `json:"destinations,omitempty"`
	// Specifies a list of returned metrics. \"* `distance` - Returns distance matrix for specified points in defined `units`. * `duration` - Returns duration matrix for specified points in **seconds**. 
	Metrics []string `json:"metrics,omitempty"`
	// Specifies whether given locations are resolved or not. If the parameter value set to `true`, every element in `destinations` and `sources` will contain a `name` element that identifies the name of the closest street. Default is `false`. 
	ResolveLocations *bool `json:"resolve_locations,omitempty"`
	// Specifies the distance unit. Default: m.
	Units *string `json:"units,omitempty"`
}

type _MatrixRequest MatrixRequest

// NewMatrixRequest instantiates a new MatrixRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMatrixRequest(locations [][]float64) *MatrixRequest {
	this := MatrixRequest{}
	this.Locations = locations
	var resolveLocations bool = false
	this.ResolveLocations = &resolveLocations
	var units string = "m"
	this.Units = &units
	return &this
}

// NewMatrixRequestWithDefaults instantiates a new MatrixRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMatrixRequestWithDefaults() *MatrixRequest {
	this := MatrixRequest{}
	var resolveLocations bool = false
	this.ResolveLocations = &resolveLocations
	var units string = "m"
	this.Units = &units
	return &this
}

// GetLocations returns the Locations field value
func (o *MatrixRequest) GetLocations() [][]float64 {
	if o == nil {
		var ret [][]float64
		return ret
	}

	return o.Locations
}

// GetLocationsOk returns a tuple with the Locations field value
// and a boolean to check if the value has been set.
func (o *MatrixRequest) GetLocationsOk() ([][]float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Locations, true
}

// SetLocations sets field value
func (o *MatrixRequest) SetLocations(v [][]float64) {
	o.Locations = v
}

// GetProfileName returns the ProfileName field value if set, zero value otherwise.
func (o *MatrixRequest) GetProfileName() string {
	if o == nil || IsNil(o.ProfileName) {
		var ret string
		return ret
	}
	return *o.ProfileName
}

// GetProfileNameOk returns a tuple with the ProfileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatrixRequest) GetProfileNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProfileName) {
		return nil, false
	}
	return o.ProfileName, true
}

// HasProfileName returns a boolean if a field has been set.
func (o *MatrixRequest) HasProfileName() bool {
	if o != nil && !IsNil(o.ProfileName) {
		return true
	}

	return false
}

// SetProfileName gets a reference to the given string and assigns it to the ProfileName field.
func (o *MatrixRequest) SetProfileName(v string) {
	o.ProfileName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MatrixRequest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatrixRequest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MatrixRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MatrixRequest) SetId(v string) {
	o.Id = &v
}

// GetSources returns the Sources field value if set, zero value otherwise.
func (o *MatrixRequest) GetSources() []string {
	if o == nil || IsNil(o.Sources) {
		var ret []string
		return ret
	}
	return o.Sources
}

// GetSourcesOk returns a tuple with the Sources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatrixRequest) GetSourcesOk() ([]string, bool) {
	if o == nil || IsNil(o.Sources) {
		return nil, false
	}
	return o.Sources, true
}

// HasSources returns a boolean if a field has been set.
func (o *MatrixRequest) HasSources() bool {
	if o != nil && !IsNil(o.Sources) {
		return true
	}

	return false
}

// SetSources gets a reference to the given []string and assigns it to the Sources field.
func (o *MatrixRequest) SetSources(v []string) {
	o.Sources = v
}

// GetDestinations returns the Destinations field value if set, zero value otherwise.
func (o *MatrixRequest) GetDestinations() []string {
	if o == nil || IsNil(o.Destinations) {
		var ret []string
		return ret
	}
	return o.Destinations
}

// GetDestinationsOk returns a tuple with the Destinations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatrixRequest) GetDestinationsOk() ([]string, bool) {
	if o == nil || IsNil(o.Destinations) {
		return nil, false
	}
	return o.Destinations, true
}

// HasDestinations returns a boolean if a field has been set.
func (o *MatrixRequest) HasDestinations() bool {
	if o != nil && !IsNil(o.Destinations) {
		return true
	}

	return false
}

// SetDestinations gets a reference to the given []string and assigns it to the Destinations field.
func (o *MatrixRequest) SetDestinations(v []string) {
	o.Destinations = v
}

// GetMetrics returns the Metrics field value if set, zero value otherwise.
func (o *MatrixRequest) GetMetrics() []string {
	if o == nil || IsNil(o.Metrics) {
		var ret []string
		return ret
	}
	return o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatrixRequest) GetMetricsOk() ([]string, bool) {
	if o == nil || IsNil(o.Metrics) {
		return nil, false
	}
	return o.Metrics, true
}

// HasMetrics returns a boolean if a field has been set.
func (o *MatrixRequest) HasMetrics() bool {
	if o != nil && !IsNil(o.Metrics) {
		return true
	}

	return false
}

// SetMetrics gets a reference to the given []string and assigns it to the Metrics field.
func (o *MatrixRequest) SetMetrics(v []string) {
	o.Metrics = v
}

// GetResolveLocations returns the ResolveLocations field value if set, zero value otherwise.
func (o *MatrixRequest) GetResolveLocations() bool {
	if o == nil || IsNil(o.ResolveLocations) {
		var ret bool
		return ret
	}
	return *o.ResolveLocations
}

// GetResolveLocationsOk returns a tuple with the ResolveLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatrixRequest) GetResolveLocationsOk() (*bool, bool) {
	if o == nil || IsNil(o.ResolveLocations) {
		return nil, false
	}
	return o.ResolveLocations, true
}

// HasResolveLocations returns a boolean if a field has been set.
func (o *MatrixRequest) HasResolveLocations() bool {
	if o != nil && !IsNil(o.ResolveLocations) {
		return true
	}

	return false
}

// SetResolveLocations gets a reference to the given bool and assigns it to the ResolveLocations field.
func (o *MatrixRequest) SetResolveLocations(v bool) {
	o.ResolveLocations = &v
}

// GetUnits returns the Units field value if set, zero value otherwise.
func (o *MatrixRequest) GetUnits() string {
	if o == nil || IsNil(o.Units) {
		var ret string
		return ret
	}
	return *o.Units
}

// GetUnitsOk returns a tuple with the Units field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatrixRequest) GetUnitsOk() (*string, bool) {
	if o == nil || IsNil(o.Units) {
		return nil, false
	}
	return o.Units, true
}

// HasUnits returns a boolean if a field has been set.
func (o *MatrixRequest) HasUnits() bool {
	if o != nil && !IsNil(o.Units) {
		return true
	}

	return false
}

// SetUnits gets a reference to the given string and assigns it to the Units field.
func (o *MatrixRequest) SetUnits(v string) {
	o.Units = &v
}

func (o MatrixRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MatrixRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["locations"] = o.Locations
	if !IsNil(o.ProfileName) {
		toSerialize["profileName"] = o.ProfileName
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Sources) {
		toSerialize["sources"] = o.Sources
	}
	if !IsNil(o.Destinations) {
		toSerialize["destinations"] = o.Destinations
	}
	if !IsNil(o.Metrics) {
		toSerialize["metrics"] = o.Metrics
	}
	if !IsNil(o.ResolveLocations) {
		toSerialize["resolve_locations"] = o.ResolveLocations
	}
	if !IsNil(o.Units) {
		toSerialize["units"] = o.Units
	}
	return toSerialize, nil
}

func (o *MatrixRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"locations",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMatrixRequest := _MatrixRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMatrixRequest)

	if err != nil {
		return err
	}

	*o = MatrixRequest(varMatrixRequest)

	return err
}

type NullableMatrixRequest struct {
	value *MatrixRequest
	isSet bool
}

func (v NullableMatrixRequest) Get() *MatrixRequest {
	return v.value
}

func (v *NullableMatrixRequest) Set(val *MatrixRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMatrixRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMatrixRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMatrixRequest(val *MatrixRequest) *NullableMatrixRequest {
	return &NullableMatrixRequest{value: val, isSet: true}
}

func (v NullableMatrixRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMatrixRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


