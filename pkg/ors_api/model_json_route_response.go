/*
Openrouteservice

This is the openrouteservice API documentation for ORS Core-Version 9.0.0. Documentations for [older Core-Versions](https://github.com/GIScience/openrouteservice-docs/releases) can be rendered with the [Swagger-Editor](https://editor-next.swagger.io/).

API version: v2
Contact: support@smartmobility.heigit.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ors

import (
	"encoding/json"
)

// checks if the JSONRouteResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JSONRouteResponse{}

// JSONRouteResponse struct for JSONRouteResponse
type JSONRouteResponse struct {
	// Bounding box that covers all returned routes
	Bbox []float64 `json:"bbox,omitempty"`
	// A list of routes returned from the request
	Routes []JSONIndividualRouteResponse `json:"routes,omitempty"`
	Metadata *RouteResponseInfo `json:"metadata,omitempty"`
}

// NewJSONRouteResponse instantiates a new JSONRouteResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJSONRouteResponse() *JSONRouteResponse {
	this := JSONRouteResponse{}
	return &this
}

// NewJSONRouteResponseWithDefaults instantiates a new JSONRouteResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJSONRouteResponseWithDefaults() *JSONRouteResponse {
	this := JSONRouteResponse{}
	return &this
}

// GetBbox returns the Bbox field value if set, zero value otherwise.
func (o *JSONRouteResponse) GetBbox() []float64 {
	if o == nil || IsNil(o.Bbox) {
		var ret []float64
		return ret
	}
	return o.Bbox
}

// GetBboxOk returns a tuple with the Bbox field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JSONRouteResponse) GetBboxOk() ([]float64, bool) {
	if o == nil || IsNil(o.Bbox) {
		return nil, false
	}
	return o.Bbox, true
}

// HasBbox returns a boolean if a field has been set.
func (o *JSONRouteResponse) HasBbox() bool {
	if o != nil && !IsNil(o.Bbox) {
		return true
	}

	return false
}

// SetBbox gets a reference to the given []float64 and assigns it to the Bbox field.
func (o *JSONRouteResponse) SetBbox(v []float64) {
	o.Bbox = v
}

// GetRoutes returns the Routes field value if set, zero value otherwise.
func (o *JSONRouteResponse) GetRoutes() []JSONIndividualRouteResponse {
	if o == nil || IsNil(o.Routes) {
		var ret []JSONIndividualRouteResponse
		return ret
	}
	return o.Routes
}

// GetRoutesOk returns a tuple with the Routes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JSONRouteResponse) GetRoutesOk() ([]JSONIndividualRouteResponse, bool) {
	if o == nil || IsNil(o.Routes) {
		return nil, false
	}
	return o.Routes, true
}

// HasRoutes returns a boolean if a field has been set.
func (o *JSONRouteResponse) HasRoutes() bool {
	if o != nil && !IsNil(o.Routes) {
		return true
	}

	return false
}

// SetRoutes gets a reference to the given []JSONIndividualRouteResponse and assigns it to the Routes field.
func (o *JSONRouteResponse) SetRoutes(v []JSONIndividualRouteResponse) {
	o.Routes = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *JSONRouteResponse) GetMetadata() RouteResponseInfo {
	if o == nil || IsNil(o.Metadata) {
		var ret RouteResponseInfo
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JSONRouteResponse) GetMetadataOk() (*RouteResponseInfo, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *JSONRouteResponse) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given RouteResponseInfo and assigns it to the Metadata field.
func (o *JSONRouteResponse) SetMetadata(v RouteResponseInfo) {
	o.Metadata = &v
}

func (o JSONRouteResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JSONRouteResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bbox) {
		toSerialize["bbox"] = o.Bbox
	}
	if !IsNil(o.Routes) {
		toSerialize["routes"] = o.Routes
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableJSONRouteResponse struct {
	value *JSONRouteResponse
	isSet bool
}

func (v NullableJSONRouteResponse) Get() *JSONRouteResponse {
	return v.value
}

func (v *NullableJSONRouteResponse) Set(val *JSONRouteResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableJSONRouteResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableJSONRouteResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJSONRouteResponse(val *JSONRouteResponse) *NullableJSONRouteResponse {
	return &NullableJSONRouteResponse{value: val, isSet: true}
}

func (v NullableJSONRouteResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJSONRouteResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


