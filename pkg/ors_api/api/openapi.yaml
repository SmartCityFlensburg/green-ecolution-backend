openapi: 3.0.1
info:
  contact:
    email: support@smartmobility.heigit.org
    name: Openrouteservice
    url: https://github.com/GIScience/openrouteservice
  description: "This is the openrouteservice API documentation for ORS Core-Version\
    \ 9.0.0. Documentations for [older Core-Versions](https://github.com/GIScience/openrouteservice-docs/releases)\
    \ can be rendered with the [Swagger-Editor](https://editor-next.swagger.io/)."
  license:
    name: GNU General Public License v3.0
    url: https://github.com/GIScience/openrouteservice/blob/main/LICENSE
  title: Openrouteservice
  version: v2
  x-ors-version: 9.0.0
servers:
- description: Openrouteservice API
  url: https://api.openrouteservice.org
- description: Development Server
  url: "http://localhost:{port}{basePath}"
  variables:
    port:
      default: "8082"
      description: Port the local openrouteservice instance runs on
    basePath:
      default: /ors
      description: Base path of the local openrouteservice instance
tags:
- description: Get information on the status of the api
  name: Status service
- description: Get directions for different modes of transport
  name: Directions Service
- description: Export the base graph for different modes of transport
  name: Export Service
- description: Get information on the health of the api
  name: Health service
- description: Obtain areas of reachability from given locations
  name: Isochrones Service
- description: Snap coordinates to the road network.
  name: Snapping Service
- description: "Obtain one-to-many, many-to-one and many-to-many matrices for time\
    \ and distance"
  name: Matrix Service
paths:
  /v2/snap/{profile}:
    post:
      description: |
        Returns a list of points snapped to the nearest edge in the routing graph. In case an appropriate
        snapping point cannot be found within the specified search radius, "null" is returned.
      operationId: getDefault
      parameters:
      - description: Specifies the route profile.
        example: driving-car
        explode: false
        in: path
        name: profile
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnappingRequest'
        required: true
      responses:
        "500":
          content:
            '*/*':
              schema:
                type: object
          description: An unexpected error was encountered and a more detailed error
            code is provided.
        "404":
          content:
            '*/*':
              schema:
                type: object
          description: "An element could not be found. If possible, a more detailed\
            \ error code is provided."
        "413":
          content:
            '*/*':
              schema:
                type: object
          description: "The request is larger than the server is able to process,\
            \ the data provided in the request exceeds the capacity limit."
        "501":
          content:
            '*/*':
              schema:
                type: object
          description: Indicates that the server does not support the functionality
            needed to fulfill the request.
        "503":
          content:
            '*/*':
              schema:
                type: object
          description: The server is currently unavailable due to overload or maintenance.
        "405":
          content:
            '*/*':
              schema:
                type: object
          description: "The specified HTTP method is not supported. For more details,\
            \ refer to the EndPoint documentation."
        "400":
          content:
            '*/*':
              schema:
                type: object
          description: The request is incorrect and therefore can not be processed.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnappingResponse'
          description: Standard response for successfully processed requests. Returns
            JSON.
      summary: Snapping Service
      tags:
      - Snapping Service
  /v2/snap/{profile}/json:
    post:
      description: |
        Returns a list of points snapped to the nearest edge in the routing graph. In case an appropriate
        snapping point cannot be found within the specified search radius, "null" is returned.
      operationId: getJsonSnapping
      parameters:
      - description: Specifies the profile.
        example: driving-car
        explode: false
        in: path
        name: profile
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnappingRequest'
        required: true
      responses:
        "500":
          content:
            '*/*':
              schema:
                type: object
          description: An unexpected error was encountered and a more detailed error
            code is provided.
        "404":
          content:
            '*/*':
              schema:
                type: object
          description: "An element could not be found. If possible, a more detailed\
            \ error code is provided."
        "413":
          content:
            '*/*':
              schema:
                type: object
          description: "The request is larger than the server is able to process,\
            \ the data provided in the request exceeds the capacity limit."
        "501":
          content:
            '*/*':
              schema:
                type: object
          description: Indicates that the server does not support the functionality
            needed to fulfill the request.
        "503":
          content:
            '*/*':
              schema:
                type: object
          description: The server is currently unavailable due to overload or maintenance.
        "405":
          content:
            '*/*':
              schema:
                type: object
          description: "The specified HTTP method is not supported. For more details,\
            \ refer to the EndPoint documentation."
        "400":
          content:
            '*/*':
              schema:
                type: object
          description: The request is incorrect and therefore can not be processed.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnappingResponse'
          description: JSON Response.
      summary: Snapping Service JSON
      tags:
      - Snapping Service
  /v2/snap/{profile}/geojson:
    post:
      description: |
        Returns a GeoJSON FeatureCollection of points snapped to the nearest edge in the routing graph.
        In case an appropriate snapping point cannot be found within the specified search radius,
        it is omitted from the features array. The features provide the 'source_id' property, to match
        the results with the input location array (IDs start at 0).
      operationId: getGeoJSONSnapping
      parameters:
      - description: Specifies the profile.
        example: driving-car
        explode: false
        in: path
        name: profile
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnappingRequest'
        required: true
      responses:
        "500":
          content:
            '*/*':
              schema:
                type: object
          description: An unexpected error was encountered and a more detailed error
            code is provided.
        "404":
          content:
            '*/*':
              schema:
                type: object
          description: "An element could not be found. If possible, a more detailed\
            \ error code is provided."
        "413":
          content:
            '*/*':
              schema:
                type: object
          description: "The request is larger than the server is able to process,\
            \ the data provided in the request exceeds the capacity limit."
        "501":
          content:
            '*/*':
              schema:
                type: object
          description: Indicates that the server does not support the functionality
            needed to fulfill the request.
        "503":
          content:
            '*/*':
              schema:
                type: object
          description: The server is currently unavailable due to overload or maintenance.
        "405":
          content:
            '*/*':
              schema:
                type: object
          description: "The specified HTTP method is not supported. For more details,\
            \ refer to the EndPoint documentation."
        "400":
          content:
            '*/*':
              schema:
                type: object
          description: The request is incorrect and therefore can not be processed.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoJSONSnappingResponse'
          description: GeoJSON Response
      summary: Snapping Service GeoJSON
      tags:
      - Snapping Service
  /v2/matrix/{profile}:
    post:
      description: |-
        Returns duration or distance matrix for multiple source and destination points.
        By default a square duration matrix is returned where every point in locations is paired with each other. The result is null if a value canâ€™t be determined.
      operationId: getDefault_1
      parameters:
      - description: Specifies the matrix profile.
        example: driving-car
        explode: false
        in: path
        name: profile
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MatrixRequest'
        required: true
      responses:
        "500":
          content:
            '*/*':
              schema:
                type: object
          description: An unexpected error was encountered and a more detailed error
            code is provided.
        "404":
          content:
            '*/*':
              schema:
                type: object
          description: "An element could not be found. If possible, a more detailed\
            \ error code is provided."
        "413":
          content:
            '*/*':
              schema:
                type: object
          description: "The request is larger than the server is able to process,\
            \ the data provided in the request exceeds the capacity limit."
        "501":
          content:
            '*/*':
              schema:
                type: object
          description: Indicates that the server does not support the functionality
            needed to fulfill the request.
        "503":
          content:
            '*/*':
              schema:
                type: object
          description: The server is currently unavailable due to overload or maintenance.
        "405":
          content:
            '*/*':
              schema:
                type: object
          description: "The specified HTTP method is not supported. For more details,\
            \ refer to the EndPoint documentation."
        "400":
          content:
            '*/*':
              schema:
                type: object
          description: The request is incorrect and therefore can not be processed.
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MatrixResponse'
          description: Standard response for successfully processed requests. Returns
            JSON.
      summary: Matrix Service
      tags:
      - Matrix Service
  /v2/isochrones/{profile}:
    post:
      description: |-
        The Isochrone Service supports time and distance analyses for one single or multiple locations.
        You may also specify the isochrone interval or provide multiple exact isochrone range values.
        This service allows the same range of profile options as the /directions endpoint,
        which help you to further customize your request to obtain a more detailed reachability area response.
      operationId: getDefaultIsochrones
      parameters:
      - description: Specifies the route profile.
        example: driving-car
        explode: false
        in: path
        name: profile
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsochronesRequest'
        required: true
      responses:
        "500":
          content:
            '*/*':
              schema:
                type: object
          description: An unexpected error was encountered and a more detailed error
            code is provided.
        "404":
          content:
            '*/*':
              schema:
                type: object
          description: "An element could not be found. If possible, a more detailed\
            \ error code is provided."
        "413":
          content:
            '*/*':
              schema:
                type: object
          description: "The request is larger than the server is able to process,\
            \ the data provided in the request exceeds the capacity limit."
        "501":
          content:
            '*/*':
              schema:
                type: object
          description: Indicates that the server does not support the functionality
            needed to fulfill the request.
        "503":
          content:
            '*/*':
              schema:
                type: object
          description: The server is currently unavailable due to overload or maintenance.
        "405":
          content:
            '*/*':
              schema:
                type: object
          description: "The specified HTTP method is not supported. For more details,\
            \ refer to the EndPoint documentation."
        "400":
          content:
            '*/*':
              schema:
                type: object
          description: The request is incorrect and therefore can not be processed.
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/GeoJSONIsochronesResponse'
          description: Standard response for successfully processed requests. Returns
            GeoJSON.
      summary: Isochrones Service
      tags:
      - Isochrones Service
  /v2/export/{profile}:
    post:
      description: "Returns a list of points, edges and weights within a given bounding\
        \ box for a selected profile as JSON. This method does not accept any request\
        \ body or parameters other than profile, start coordinate, and end coordinate."
      operationId: getDefault_2
      parameters:
      - description: Specifies the route profile.
        example: driving-car
        explode: false
        in: path
        name: profile
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/graphExportService'
        required: true
      responses:
        "500":
          content:
            '*/*':
              schema:
                type: object
          description: An unexpected error was encountered and a more detailed error
            code is provided.
        "404":
          content:
            '*/*':
              schema:
                type: object
          description: "An element could not be found. If possible, a more detailed\
            \ error code is provided."
        "413":
          content:
            '*/*':
              schema:
                type: object
          description: "The request is larger than the server is able to process,\
            \ the data provided in the request exceeds the capacity limit."
        "501":
          content:
            '*/*':
              schema:
                type: object
          description: Indicates that the server does not support the functionality
            needed to fulfill the request.
        "503":
          content:
            '*/*':
              schema:
                type: object
          description: The server is currently unavailable due to overload or maintenance.
        "405":
          content:
            '*/*':
              schema:
                type: object
          description: "The specified HTTP method is not supported. For more details,\
            \ refer to the EndPoint documentation."
        "400":
          content:
            '*/*':
              schema:
                type: object
          description: The request is incorrect and therefore can not be processed.
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/JsonExportResponse'
          description: Standard response for successfully processed requests. Returns
            JSON.
      summary: Export Service
      tags:
      - Export Service
  /v2/export/{profile}/json:
    post:
      description: "Returns a list of points, edges and weights within a given bounding\
        \ box for a selected profile JSON."
      operationId: getJsonExport
      parameters:
      - description: Specifies the profile.
        example: driving-car
        explode: false
        in: path
        name: profile
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/graphExportService'
        required: true
      responses:
        "500":
          content:
            '*/*':
              schema:
                type: object
          description: An unexpected error was encountered and a more detailed error
            code is provided.
        "404":
          content:
            '*/*':
              schema:
                type: object
          description: "An element could not be found. If possible, a more detailed\
            \ error code is provided."
        "413":
          content:
            '*/*':
              schema:
                type: object
          description: "The request is larger than the server is able to process,\
            \ the data provided in the request exceeds the capacity limit."
        "501":
          content:
            '*/*':
              schema:
                type: object
          description: Indicates that the server does not support the functionality
            needed to fulfill the request.
        "503":
          content:
            '*/*':
              schema:
                type: object
          description: The server is currently unavailable due to overload or maintenance.
        "405":
          content:
            '*/*':
              schema:
                type: object
          description: "The specified HTTP method is not supported. For more details,\
            \ refer to the EndPoint documentation."
        "400":
          content:
            '*/*':
              schema:
                type: object
          description: The request is incorrect and therefore can not be processed.
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/JsonExportResponse'
          description: JSON Response.
      summary: Export Service JSON
      tags:
      - Export Service
  /v2/directions/{profile}:
    get:
      description: "Get a basic route between two points with the profile provided.\
        \ Returned response is in GeoJSON format. This method does not accept any\
        \ request body or parameters other than profile, start coordinate, and end\
        \ coordinate."
      operationId: getSimpleGeoJsonRoute
      parameters:
      - description: Specifies the route profile.
        example: driving-car
        explode: false
        in: path
        name: profile
        required: true
        schema:
          type: string
        style: simple
      - description: "Start coordinate of the route in `longitude,latitude` format."
        example: "8.681495,49.41461"
        explode: true
        in: query
        name: start
        required: true
        schema:
          type: string
        style: form
      - description: "Destination coordinate of the route in `longitude,latitude`\
          \ format."
        example: "8.687872,49.420318"
        explode: true
        in: query
        name: end
        required: true
        schema:
          type: string
        style: form
      responses:
        "500":
          content:
            '*/*':
              schema:
                type: object
          description: An unexpected error was encountered and a more detailed error
            code is provided.
        "404":
          content:
            '*/*':
              schema:
                type: object
          description: "An element could not be found. If possible, a more detailed\
            \ error code is provided."
        "413":
          content:
            '*/*':
              schema:
                type: object
          description: "The request is larger than the server is able to process,\
            \ the data provided in the request exceeds the capacity limit."
        "501":
          content:
            '*/*':
              schema:
                type: object
          description: Indicates that the server does not support the functionality
            needed to fulfill the request.
        "503":
          content:
            '*/*':
              schema:
                type: object
          description: The server is currently unavailable due to overload or maintenance.
        "405":
          content:
            '*/*':
              schema:
                type: object
          description: "The specified HTTP method is not supported. For more details,\
            \ refer to the EndPoint documentation."
        "400":
          content:
            '*/*':
              schema:
                type: object
          description: The request is incorrect and therefore can not be processed.
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/GeoJSONRouteResponse'
          description: "Standard response for successfully processed requests. Returns\
            \ GeoJSON. The decoded values of the extra information can be found [here](https://giscience.github.io/openrouteservice/api-reference/endpoints/directions/extra-info/)."
      summary: Directions Service
      tags:
      - Directions Service
    post:
      description: Returns a route between two or more locations for a selected profile
        and its settings as JSON
      operationId: getDefault_3
      parameters:
      - description: Specifies the route profile.
        example: driving-car
        explode: false
        in: path
        name: profile
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/directionsService'
        required: true
      responses:
        "500":
          content:
            '*/*':
              schema:
                type: object
          description: An unexpected error was encountered and a more detailed error
            code is provided.
        "404":
          content:
            '*/*':
              schema:
                type: object
          description: "An element could not be found. If possible, a more detailed\
            \ error code is provided."
        "413":
          content:
            '*/*':
              schema:
                type: object
          description: "The request is larger than the server is able to process,\
            \ the data provided in the request exceeds the capacity limit."
        "501":
          content:
            '*/*':
              schema:
                type: object
          description: Indicates that the server does not support the functionality
            needed to fulfill the request.
        "503":
          content:
            '*/*':
              schema:
                type: object
          description: The server is currently unavailable due to overload or maintenance.
        "405":
          content:
            '*/*':
              schema:
                type: object
          description: "The specified HTTP method is not supported. For more details,\
            \ refer to the EndPoint documentation."
        "400":
          content:
            '*/*':
              schema:
                type: object
          description: The request is incorrect and therefore can not be processed.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONRouteResponse'
          description: "Standard response for successfully processed requests. Returns\
            \ JSON. The decoded values of the extra information can be found [here](https://giscience.github.io/openrouteservice/api-reference/endpoints/directions/extra-info/)."
      summary: Directions Service
      tags:
      - Directions Service
  /v2/directions/{profile}/json:
    post:
      description: Returns a route between two or more locations for a selected profile
        and its settings as JSON
      operationId: getJsonRoute
      parameters:
      - description: Specifies the route profile.
        example: driving-car
        explode: false
        in: path
        name: profile
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/directionsService'
        required: true
      responses:
        "500":
          content:
            '*/*':
              schema:
                type: object
          description: An unexpected error was encountered and a more detailed error
            code is provided.
        "404":
          content:
            '*/*':
              schema:
                type: object
          description: "An element could not be found. If possible, a more detailed\
            \ error code is provided."
        "413":
          content:
            '*/*':
              schema:
                type: object
          description: "The request is larger than the server is able to process,\
            \ the data provided in the request exceeds the capacity limit."
        "501":
          content:
            '*/*':
              schema:
                type: object
          description: Indicates that the server does not support the functionality
            needed to fulfill the request.
        "503":
          content:
            '*/*':
              schema:
                type: object
          description: The server is currently unavailable due to overload or maintenance.
        "405":
          content:
            '*/*':
              schema:
                type: object
          description: "The specified HTTP method is not supported. For more details,\
            \ refer to the EndPoint documentation."
        "400":
          content:
            '*/*':
              schema:
                type: object
          description: The request is incorrect and therefore can not be processed.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONRouteResponse'
          description: JSON Response
      summary: Directions Service JSON
      tags:
      - Directions Service
  /v2/directions/{profile}/gpx:
    post:
      description: "Returns a route between two or more locations for a selected profile\
        \ and its settings as GPX. The schema can be found [here](https://raw.githubusercontent.com/GIScience/openrouteservice-schema/main/gpx/v1/ors-gpx.xsd)"
      operationId: getGPXRoute
      parameters:
      - description: Specifies the route profile.
        example: driving-car
        explode: false
        in: path
        name: profile
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/directionsService'
        required: true
      responses:
        "500":
          content:
            '*/*':
              schema:
                type: object
          description: An unexpected error was encountered and a more detailed error
            code is provided.
        "404":
          content:
            '*/*':
              schema:
                type: object
          description: "An element could not be found. If possible, a more detailed\
            \ error code is provided."
        "413":
          content:
            '*/*':
              schema:
                type: object
          description: "The request is larger than the server is able to process,\
            \ the data provided in the request exceeds the capacity limit."
        "501":
          content:
            '*/*':
              schema:
                type: object
          description: Indicates that the server does not support the functionality
            needed to fulfill the request.
        "503":
          content:
            '*/*':
              schema:
                type: object
          description: The server is currently unavailable due to overload or maintenance.
        "405":
          content:
            '*/*':
              schema:
                type: object
          description: "The specified HTTP method is not supported. For more details,\
            \ refer to the EndPoint documentation."
        "400":
          content:
            '*/*':
              schema:
                type: object
          description: The request is incorrect and therefore can not be processed.
        "200":
          content:
            application/gpx+xml:
              schema:
                $ref: '#/components/schemas/gpx'
          description: Standard response for successfully processed requests. Returns
            GPX.
      summary: Directions Service GPX
      tags:
      - Directions Service
  /v2/directions/{profile}/geojson:
    post:
      description: Returns a route between two or more locations for a selected profile
        and its settings as GeoJSON
      operationId: getGeoJsonRoute
      parameters:
      - description: Specifies the route profile.
        example: driving-car
        explode: false
        in: path
        name: profile
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/directionsService'
        required: true
      responses:
        "500":
          content:
            '*/*':
              schema:
                type: object
          description: An unexpected error was encountered and a more detailed error
            code is provided.
        "404":
          content:
            '*/*':
              schema:
                type: object
          description: "An element could not be found. If possible, a more detailed\
            \ error code is provided."
        "413":
          content:
            '*/*':
              schema:
                type: object
          description: "The request is larger than the server is able to process,\
            \ the data provided in the request exceeds the capacity limit."
        "501":
          content:
            '*/*':
              schema:
                type: object
          description: Indicates that the server does not support the functionality
            needed to fulfill the request.
        "503":
          content:
            '*/*':
              schema:
                type: object
          description: The server is currently unavailable due to overload or maintenance.
        "405":
          content:
            '*/*':
              schema:
                type: object
          description: "The specified HTTP method is not supported. For more details,\
            \ refer to the EndPoint documentation."
        "400":
          content:
            '*/*':
              schema:
                type: object
          description: The request is incorrect and therefore can not be processed.
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/GeoJSONRouteResponse'
          description: "Standard response for successfully processed requests. Returns\
            \ GeoJSON. The decoded values of the extra information can be found [here](https://giscience.github.io/openrouteservice/api-reference/endpoints/directions/extra-info/)."
      summary: Directions Service GeoJSON
      tags:
      - Directions Service
  /v2/status:
    get:
      operationId: getStatus
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
      - Status service
  /v2/health:
    get:
      operationId: fetchHealth
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: object
          description: OK
      tags:
      - Health service
components:
  schemas:
    SnappingRequest:
      description: Snapping service endpoint.
      example:
        profileName: profileName
        locations:
        - - 8.669629
          - 49.413025
        - - 8.675841
          - 49.418532
        - - 8.665144
          - 49.415594
        id: my_request
        radius: 350
      properties:
        locations:
          description: The locations to be snapped as array of `longitude/latitude`
            pairs.
          example:
          - - 8.669629
            - 49.413025
          - - 8.675841
            - 49.418532
          - - 8.665144
            - 49.415594
          items:
            description: The locations to be snapped as array of `longitude/latitude`
              pairs.
            example:
            - - 8.669629
              - 49.413025
            - - 8.675841
              - 49.418532
            - - 8.665144
              - 49.415594
            items:
              description: The locations to be snapped as array of `longitude/latitude`
                pairs.
              format: double
              type: number
            type: array
          type: array
        profileName:
          type: string
        id:
          description: Arbitrary identification string of the request reflected in
            the meta information.
          example: my_request
          type: string
        radius:
          description: Maximum radius in meters around given coordinates to search
            for graph edges.
          example: 350
          format: double
          type: number
      required:
      - locations
      - radius
      type: object
    EngineInfo:
      description: Information about the openrouteservice engine used
      example:
        build_date: 2019-02-07T14:28:11Z
        graph_date: 2019-02-07T14:28:11Z
        version: "8.0"
      properties:
        version:
          description: The backend version of the openrouteservice that was queried
          example: "8.0"
          type: string
        build_date:
          description: The date that the service was last updated
          example: 2019-02-07T14:28:11Z
          type: string
        graph_date:
          description: The date that the graph data was last updated
          example: 2019-02-07T14:28:11Z
          type: string
      type: object
    JSONLocation:
      description: The snapped locations as coordinates and snapping distance.
      example:
        name: Bergheimer StraÃŸe
        location:
        - 8.678962
        - 49.40783
        snapped_distance: 1.2
      properties:
        location:
          description: "{longitude},{latitude} coordinates of the closest accessible\
            \ point on the routing graph"
          example:
          - 8.678962
          - 49.40783
          items:
            description: "{longitude},{latitude} coordinates of the closest accessible\
              \ point on the routing graph"
            format: double
            type: number
          type: array
        name:
          description: Name of the street the closest accessible point is situated
            on. Only for `resolve_locations=true` and only if name is available.
          example: Bergheimer StraÃŸe
          type: string
          x-validWhen:
            ref: resolve_locations
            value: true
        snapped_distance:
          description: Distance between the `source/destination` Location and the
            used point on the routing graph in meters.
          example: 1.2
          format: double
          type: number
      type: object
    SnappingResponse:
      description: The Snapping Response contains the snapped coordinates.
      example:
        metadata:
          system_message: A message string configured in the service
          engine:
            build_date: 2019-02-07T14:28:11Z
            graph_date: 2019-02-07T14:28:11Z
            version: "8.0"
          service: snap
          query:
            profileName: profileName
            locations:
            - - 8.669629
              - 49.413025
            - - 8.675841
              - 49.418532
            - - 8.665144
              - 49.415594
            id: my_request
            radius: 350
          attribution: openrouteservice.org | OpenStreetMap contributors
          timestamp: 1549549847974
        locations:
        - name: Bergheimer StraÃŸe
          location:
          - 8.678962
          - 49.40783
          snapped_distance: 1.2
        - name: Bergheimer StraÃŸe
          location:
          - 8.678962
          - 49.40783
          snapped_distance: 1.2
      properties:
        locations:
          description: The snapped locations as coordinates and snapping distance.
          items:
            $ref: '#/components/schemas/JSONLocation'
          type: array
        metadata:
          $ref: '#/components/schemas/SnappingResponseInfo'
      type: object
    SnappingResponseInfo:
      description: Information about the request
      example:
        system_message: A message string configured in the service
        engine:
          build_date: 2019-02-07T14:28:11Z
          graph_date: 2019-02-07T14:28:11Z
          version: "8.0"
        service: snap
        query:
          profileName: profileName
          locations:
          - - 8.669629
            - 49.413025
          - - 8.675841
            - 49.418532
          - - 8.665144
            - 49.415594
          id: my_request
          radius: 350
        attribution: openrouteservice.org | OpenStreetMap contributors
        timestamp: 1549549847974
      properties:
        attribution:
          description: Copyright and attribution information
          example: openrouteservice.org | OpenStreetMap contributors
          type: string
        service:
          description: The service that was requested
          example: snap
          type: string
        timestamp:
          description: Time that the request was made (UNIX Epoch time)
          example: 1549549847974
          format: int64
          type: integer
        query:
          $ref: '#/components/schemas/SnappingRequest'
        engine:
          $ref: '#/components/schemas/EngineInfo'
        system_message:
          description: System message
          example: A message string configured in the service
          type: string
      type: object
    GeoJSONFeature:
      description: Information about the service and request
      example:
        geometry:
          coordinates:
          - 8.681495
          - 49.41461
          type: Point
        type: Feature
        properties:
          name: Gerhart-Hauptmann-StraÃŸe
          snapped_distance: 0.02
          source_id: 0
      properties:
        type:
          default: Feature
          description: GeoJSON type
          type: string
        properties:
          $ref: '#/components/schemas/GeoJSONFeatureProperties'
        geometry:
          $ref: '#/components/schemas/GeoJSONPointGeometry'
      type: object
    GeoJSONFeatureProperties:
      description: Feature properties
      example:
        name: Gerhart-Hauptmann-StraÃŸe
        snapped_distance: 0.02
        source_id: 0
      properties:
        name:
          description: '"Name of the street the closest accessible point is situated
            on. Only for `resolve_locations=true` and only if name is available.'
          example: Gerhart-Hauptmann-StraÃŸe
          type: string
          x-validWhen:
            ref: resolve_locations
            value: true
        snapped_distance:
          description: Distance between the `source/destination` Location and the
            used point on the routing graph in meters.
          example: 0.02
          format: double
          type: number
        source_id:
          description: Index of the requested location
          format: int32
          type: integer
      type: object
    GeoJSONPointGeometry:
      description: Feature geometry
      example:
        coordinates:
        - 8.681495
        - 49.41461
        type: Point
      properties:
        type:
          default: Point
          description: GeoJSON type
          type: string
        coordinates:
          description: Lon/Lat coordinates of the snapped location
          example:
          - 8.681495
          - 49.41461
          items:
            description: Lon/Lat coordinates of the snapped location
            format: double
            type: number
          type: array
      type: object
    GeoJSONSnappingResponse:
      description: The GeoJSON Snapping Response contains the snapped coordinates
        in GeoJSON format.
      example:
        features:
        - geometry:
            coordinates:
            - 8.681495
            - 49.41461
            type: Point
          type: Feature
          properties:
            name: Gerhart-Hauptmann-StraÃŸe
            snapped_distance: 0.02
            source_id: 0
        - geometry:
            coordinates:
            - 8.681495
            - 49.41461
            type: Point
          type: Feature
          properties:
            name: Gerhart-Hauptmann-StraÃŸe
            snapped_distance: 0.02
            source_id: 0
        metadata:
          system_message: A message string configured in the service
          engine:
            build_date: 2019-02-07T14:28:11Z
            graph_date: 2019-02-07T14:28:11Z
            version: "8.0"
          service: snap
          query:
            profileName: profileName
            locations:
            - - 8.669629
              - 49.413025
            - - 8.675841
              - 49.418532
            - - 8.665144
              - 49.415594
            id: my_request
            radius: 350
          attribution: openrouteservice.org | OpenStreetMap contributors
          timestamp: 1549549847974
        bbox:
        - 49.414057
        - 8.680894
        - 49.420514
        - 8.690123
        type: FeatureCollection
      properties:
        type:
          default: FeatureCollection
          description: GeoJSON type
          type: string
        features:
          description: Information about the service and request
          items:
            $ref: '#/components/schemas/GeoJSONFeature'
          type: array
        metadata:
          $ref: '#/components/schemas/SnappingResponseInfo'
        bbox:
          description: Bounding box that covers all returned snapping points
          example:
          - 49.414057
          - 8.680894
          - 49.420514
          - 8.690123
          items:
            description: Bounding box that covers all returned snapping points
            format: double
            type: number
          type: array
      type: object
    MatrixRequest:
      description: The JSON body request sent to the matrix service which defines
        options and parameters regarding the matrix to generate.
      example:
        profileName: profileName
        sources:
        - "[\"all\"]"
        - "[\"all\"]"
        destinations:
        - "[\"all\"]"
        - "[\"all\"]"
        locations:
        - - 9.70093
          - 48.477473
        - - 9.207916
          - 49.153868
        - - 37.573242
          - 55.801281
        - - 115.663757
          - 38.106467
        id: my_request
        metrics:
        - "[\"duration\"]"
        - "[\"duration\"]"
        units: m
        resolve_locations: false
      properties:
        locations:
          description: "List of comma separated lists of `longitude,latitude` coordinates\
            \ in WGS 84 (EPSG:4326)"
          example:
          - - 9.70093
            - 48.477473
          - - 9.207916
            - 49.153868
          - - 37.573242
            - 55.801281
          - - 115.663757
            - 38.106467
          items:
            description: "List of comma separated lists of `longitude,latitude` coordinates\
              \ in WGS 84 (EPSG:4326)"
            example:
            - - 9.70093
              - 48.477473
            - - 9.207916
              - 49.153868
            - - 37.573242
              - 55.801281
            - - 115.663757
              - 38.106467
            items:
              description: "List of comma separated lists of `longitude,latitude`\
                \ coordinates in WGS 84 (EPSG:4326)"
              format: double
              type: number
            type: array
          type: array
        profileName:
          type: string
        id:
          description: Arbitrary identification string of the request reflected in
            the meta information.
          example: my_request
          type: string
        sources:
          default:
          - all
          description: "A list of indices that refers to the list of locations (starting\
            \ with `0`). `{index_1},{index_2}[,{index_N} ...]` or `all` (default).\
            \ example `[0,3]` for the first and fourth locations "
          items:
            default: "[\"all\"]"
            description: "A list of indices that refers to the list of locations (starting\
              \ with `0`). `{index_1},{index_2}[,{index_N} ...]` or `all` (default).\
              \ example `[0,3]` for the first and fourth locations "
            type: string
          type: array
        destinations:
          default:
          - all
          description: "A list of indices that refers to the list of locations (starting\
            \ with `0`). `{index_1},{index_2}[,{index_N} ...]` or `all` (default).\
            \ `[0,3]` for the first and fourth locations "
          items:
            default: "[\"all\"]"
            description: "A list of indices that refers to the list of locations (starting\
              \ with `0`). `{index_1},{index_2}[,{index_N} ...]` or `all` (default).\
              \ `[0,3]` for the first and fourth locations "
            type: string
          type: array
        metrics:
          default:
          - duration
          description: |
            Specifies a list of returned metrics.
            "* `distance` - Returns distance matrix for specified points in defined `units`.
            * `duration` - Returns duration matrix for specified points in **seconds**.
          items:
            default: "[\"duration\"]"
            description: |
              Specifies a list of returned metrics.
              "* `distance` - Returns distance matrix for specified points in defined `units`.
              * `duration` - Returns duration matrix for specified points in **seconds**.
            enum:
            - distance
            - duration
            type: string
          type: array
        resolve_locations:
          default: false
          description: "Specifies whether given locations are resolved or not. If\
            \ the parameter value set to `true`, every element in `destinations` and\
            \ `sources` will contain a `name` element that identifies the name of\
            \ the closest street. Default is `false`. "
          type: boolean
        units:
          default: m
          description: |-
            Specifies the distance unit.
            Default: m.
          enum:
          - m
          - km
          - mi
          type: string
          x-validWhen:
            ref: metrics
            value: distance
      required:
      - locations
      type: object
    MatrixResponse:
      description: The Matrix Response contains one matrix for each specified `metrics`
        value.
      example:
        metadata:
          system_message: A message string configured in the service
          engine:
            build_date: 2019-02-07T14:28:11Z
            graph_date: 2019-02-07T14:28:11Z
            version: "8.0"
          service: matrix
          query:
            profileName: profileName
            sources:
            - "[\"all\"]"
            - "[\"all\"]"
            destinations:
            - "[\"all\"]"
            - "[\"all\"]"
            locations:
            - - 9.70093
              - 48.477473
            - - 9.207916
              - 49.153868
            - - 37.573242
              - 55.801281
            - - 115.663757
              - 38.106467
            id: my_request
            metrics:
            - "[\"duration\"]"
            - "[\"duration\"]"
            units: m
            resolve_locations: false
          attribution: "openrouteservice.org, OpenStreetMap contributors"
          id: request123
          timestamp: 1549549847974
      properties:
        metadata:
          $ref: '#/components/schemas/MatrixResponseInfo'
      type: object
    MatrixResponseInfo:
      description: Information about the request
      example:
        system_message: A message string configured in the service
        engine:
          build_date: 2019-02-07T14:28:11Z
          graph_date: 2019-02-07T14:28:11Z
          version: "8.0"
        service: matrix
        query:
          profileName: profileName
          sources:
          - "[\"all\"]"
          - "[\"all\"]"
          destinations:
          - "[\"all\"]"
          - "[\"all\"]"
          locations:
          - - 9.70093
            - 48.477473
          - - 9.207916
            - 49.153868
          - - 37.573242
            - 55.801281
          - - 115.663757
            - 38.106467
          id: my_request
          metrics:
          - "[\"duration\"]"
          - "[\"duration\"]"
          units: m
          resolve_locations: false
        attribution: "openrouteservice.org, OpenStreetMap contributors"
        id: request123
        timestamp: 1549549847974
      properties:
        id:
          description: ID of the request (as passed in by the query)
          example: request123
          type: string
        attribution:
          description: Copyright and attribution information
          example: "openrouteservice.org, OpenStreetMap contributors"
          type: string
        service:
          description: The service that was requested
          example: matrix
          type: string
        timestamp:
          description: Time that the request was made (UNIX Epoch time)
          example: 1549549847974
          format: int64
          type: integer
        query:
          $ref: '#/components/schemas/MatrixRequest'
        engine:
          $ref: '#/components/schemas/EngineInfo'
        system_message:
          description: System message
          example: A message string configured in the service
          type: string
      type: object
    IsochronesRequest:
      description: The JSON body request sent to the isochrones service which defines
        options and parameters regarding the isochrones to generate.
      example:
        profileName: profileName
        range:
        - 300
        - 200
        units: m
        range_type: time
        intersections: false
        location_type: start
        options:
          avoid_borders: controlled
        locations:
        - - 8.681495
          - 49.41461
        - - 8.686507
          - 49.41943
        attributes:
        - area
        interval: 30
        id: my_request
        smoothing: 25
        area_units: m
      properties:
        profileName:
          type: string
        id:
          description: Arbitrary identification string of the request reflected in
            the meta information.
          example: my_request
          type: string
        locations:
          description: The locations to use for the route as an array of `longitude/latitude`
            pairs in WGS 84 (EPSG:4326)
          example:
          - - 8.681495
            - 49.41461
          - - 8.686507
            - 49.41943
          items:
            description: The locations to use for the route as an array of `longitude/latitude`
              pairs in WGS 84 (EPSG:4326)
            example:
            - - 8.681495
              - 49.41461
            - - 8.686507
              - 49.41943
            items:
              description: The locations to use for the route as an array of `longitude/latitude`
                pairs in WGS 84 (EPSG:4326)
              format: double
              type: number
            type: array
          type: array
        location_type:
          default: start
          description: "`start` treats the location(s) as starting point, `destination`\
            \ as goal."
          enum:
          - start
          - destination
          type: string
        range:
          description: Maximum range value of the analysis in **seconds** for time
            and **metres** for distance.Alternatively a comma separated list of specific
            range values. Ranges will be the same for all locations.
          example:
          - 300
          - 200
          items:
            description: Maximum range value of the analysis in **seconds** for time
              and **metres** for distance.Alternatively a comma separated list of
              specific range values. Ranges will be the same for all locations.
            format: double
            type: number
          type: array
        range_type:
          default: time
          description: Specifies the isochrones reachability type.
          enum:
          - time
          - distance
          type: string
        units:
          default: m
          description: "Specifies the distance units only if `range_type` is set to\
            \ distance.\nDefault: m. "
          enum:
          - m
          - km
          - mi
          type: string
          x-validWhen:
            ref: range_type
            value: distance
        options:
          $ref: '#/components/schemas/routeOptions'
        area_units:
          default: m
          description: "Specifies the area unit.\nDefault: m. "
          enum:
          - m
          - km
          - mi
          type: string
          x-validWhen:
            ref: attributes
            value: area
        intersections:
          default: false
          description: 'Specifies whether to return intersecting polygons. '
          type: boolean
        attributes:
          description: List of isochrones attributes
          example:
          - area
          items:
            description: List of isochrones attributes
            enum:
            - area
            - reachfactor
            - total_pop
            example: "[\"area\"]"
            type: string
          type: array
        interval:
          description: Interval of isochrones or equidistants. This is only used if
            a single range value is given. Value in **seconds** for time and **meters**
            for distance.
          example: 30
          format: double
          type: number
        smoothing:
          description: |-
            Applies a level of generalisation to the isochrone polygons generated as a `smoothing_factor` between `0` and `100.0`.
            Generalisation is produced by determining a maximum length of a connecting line between two points found on the outside of a containing polygon.
            If the distance is larger than a threshold value, the line between the two points is removed and a smaller connecting line between other points is used.
            Note that the minimum length of this connecting line is ~1333m, and so when the `smoothing_factor` results in a distance smaller than this, the minimum value is used.
            The threshold value is determined as `(maximum_radius_of_isochrone / 100) * smoothing_factor`.
            Therefore, a value closer to 100 will result in a more generalised shape.
            The polygon generation algorithm is based on Duckham and al. (2008) `"Efficient generation of simple polygons for characterizing the shape of a set of points in the plane."`
          example: 25
          format: double
          type: number
      required:
      - locations
      - range
      type: object
    JSONObject:
      additionalProperties:
        description: Comprises areas to be avoided for the route. Formatted in GeoJSON
          as either a Polygon or Multipolygon object.
        type: object
      description: Comprises areas to be avoided for the route. Formatted in GeoJSON
        as either a Polygon or Multipolygon object.
      properties:
        empty:
          type: boolean
      type: object
    Restrictions:
      description: Describe restrictions to be applied to edges on the routing. any
        edges that do not match these restrictions are not traversed.
      properties:
        length:
          description: Length restriction in metres.
          example: 8.4
          format: float
          type: number
          x-validWhen:
            ref: profile
            value: driving-hgv
        width:
          description: Width restriction in metres.
          example: 5.6
          format: float
          type: number
          x-validWhen:
            ref: profile
            value: driving-hgv
        height:
          description: 'Height restriction in metres. '
          example: 4.2
          format: float
          type: number
          x-validWhen:
            ref: profile
            value: driving-hgv
        axleload:
          description: Axleload restriction in tons.
          example: 50
          format: float
          type: number
          x-validWhen:
            ref: profile
            value: driving-hgv
        weight:
          description: 'Weight restriction in tons. '
          example: 40
          format: float
          type: number
          x-validWhen:
            ref: profile
            value: driving-hgv
        hazmat:
          default: false
          description: 'Specifies whether to use appropriate routing for delivering
            hazardous goods and avoiding water protected areas. Default is `false`. '
          type: boolean
          x-validWhen:
            ref: profile
            value: driving-hgv
        surface_type:
          default: sett
          description: 'Specifies the minimum surface type. Default is `sett`. '
          type: string
          x-validWhen:
            ref: profile
            value: wheelchair
        track_type:
          default: grade1
          description: 'Specifies the minimum grade of the route. Default is `grade1`. '
          type: string
          x-validWhen:
            ref: profile
            value: wheelchair
        smoothness_type:
          default: good
          description: Specifies the minimum smoothness of the route. Default is `good`.
          enum:
          - excellent
          - good
          - intermediate
          - bad
          - very_bad
          - horrible
          - very_horrible
          - impassable
          type: string
          x-validWhen:
            ref: profile
            value: wheelchair
        maximum_sloped_kerb:
          default: 0.6
          description: "Specifies the maximum height of the sloped curb in metres.\
            \ Values are `0.03`, `0.06` (default), `0.1`."
          format: float
          type: number
          x-validWhen:
            ref: profile
            value: wheelchair
        maximum_incline:
          default: 6
          description: "Specifies the maximum incline as a percentage. `3`, `6` (default),\
            \ `10`, `15."
          format: int32
          type: integer
          x-validWhen:
            ref: profile
            value: wheelchair
        minimum_width:
          description: Specifies the minimum width of the footway in metres.
          example: 2.5
          format: float
          type: number
          x-validWhen:
            ref: profile
            value: wheelchair
      type: object
    profileParameters:
      description: Specifies additional routing parameters. For all profiles except
        `driving-car`.
      properties:
        weightings:
          $ref: '#/components/schemas/profileWeightings'
        restrictions:
          $ref: '#/components/schemas/Restrictions'
        surface_quality_known:
          description: Specifies whether to enforce that only ways with known information
            on surface quality be taken into account - default false
          example: true
          type: boolean
          x-validWhen:
            ref: profile
            value: wheelchair
        allow_unsuitable:
          description: Specifies if ways that might not be suitable (e.g. unknown
            pedestrian usage) should be included in finding routes - default false
          example: true
          type: boolean
          x-validWhen:
            ref: profile
            value: wheelchair
      title: Profile Parameters
      type: object
      x-validWhen:
        valueNot: driving-car
        ref: profile
    profileWeightings:
      description: Describe additional weightings to be applied to edges on the routing.
      properties:
        steepness_difficulty:
          description: |-
            Specifies the fitness level for `cycling-*` profiles.

             level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level.
          example: 2
          format: int32
          type: integer
          x-validWhen:
            ref: profile
            value: cycling-*
        green:
          description: |-
            Specifies the Green factor for `foot-*` profiles.

            factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route.
          example: 0.4
          format: float
          type: number
          x-validWhen:
            ref: profile
            value: foot-*
        quiet:
          description: |-
            Specifies the Quiet factor for foot-* profiles.

            factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route.
          example: 0.8
          format: float
          type: number
          x-validWhen:
            ref: profile
            value: foot-*
        shadow:
          description: |-
            Specifies the shadow factor for `foot-*` profiles.

            factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route.
          example: 0.4
          format: float
          type: number
          x-validWhen:
            ref: profile
            value: foot-*
      title: Profile Weightings
      type: object
    roundTripRouteOptions:
      description: Specifies the parameters for generating round trip routes.
      example:
        length: 10000
        points: 5
      properties:
        length:
          description: "The target length of the route in `m` (note that this is a\
            \ preferred value, but results may be different)."
          example: 10000
          format: float
          type: number
        points:
          description: The number of points to use on the route. Larger values create
            more circular routes.
          example: 5
          format: int32
          type: integer
        seed:
          description: A seed to use for adding randomisation to the overall direction
            of the generated route
          example: 1
          format: int64
          type: integer
      title: Round Trip Route Options
      type: object
    routeOptions:
      description: Advanced options for routing
      example:
        avoid_borders: controlled
      properties:
        avoid_features:
          description: 'List of features to avoid. '
          example:
          - highways
          items:
            description: Definition of the features to be avoided.
            enum:
            - highways
            - tollways
            - ferries
            - fords
            - steps
            example: "[\"highways\"]"
            type: string
            x-itemRestrictions:
              ref: profile
              itemsWhen:
                driving-*:
                - highways
                - tollways
                - ferries
                cycling-*:
                - ferries
                - steps
                - fords
                foot-*:
                - ferries
                - fords
                - steps
                wheelchair:
                - ferries
                - steps
          type: array
          x-itemRestrictions:
            ref: profile
            itemsWhen:
              driving-*:
              - highways
              - tollways
              - ferries
              cycling-*:
              - ferries
              - steps
              - fords
              foot-*:
              - ferries
              - fords
              - steps
              wheelchair:
              - ferries
              - steps
        avoid_borders:
          description: Specify which type of border crossing to avoid
          enum:
          - all
          - controlled
          - none
          example: controlled
          type: string
          x-validWhen:
            ref: profile
            value: driving-*
        avoid_countries:
          description: "List of countries to exclude from matrix with `driving-*`\
            \ profiles. Can be used together with `'avoid_borders': 'controlled'`.\
            \ `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries\
            \ and application examples can be found [here](https://giscience.github.io/openrouteservice/technical-details/country-list).\
            \ Also, ISO standard country codes cna be used in place of the numerical\
            \ ids, for example, DE or DEU for Germany. "
          example:
          - 11
          - 193
          items:
            description: "List of countries to exclude from matrix with `driving-*`\
              \ profiles. Can be used together with `'avoid_borders': 'controlled'`.\
              \ `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries\
              \ and application examples can be found [here](https://giscience.github.io/openrouteservice/technical-details/country-list).\
              \ Also, ISO standard country codes cna be used in place of the numerical\
              \ ids, for example, DE or DEU for Germany. "
            example: "[11,193]"
            type: string
            x-validWhen:
              ref: profile
              value: driving-*
          type: array
          x-validWhen:
            ref: profile
            value: driving-*
        vehicle_type:
          default: hgv
          description: Definition of the vehicle type.
          enum:
          - hgv
          - bus
          - agricultural
          - delivery
          - forestry
          - goods
          - unknown
          type: string
          x-validWhen:
            ref: profile
            value: driving-hgv
        profile_params:
          $ref: '#/components/schemas/profileParameters'
        avoid_polygons:
          $ref: '#/components/schemas/routeOptions_avoid_polygons'
        round_trip:
          $ref: '#/components/schemas/roundTripRouteOptions'
      title: Route Options
      type: object
    GeoJSONIsochroneBase:
      properties:
        type:
          type: string
        geometry:
          $ref: '#/components/schemas/JSONObject'
      type: object
    GeoJSONIsochronesResponse:
      properties:
        type:
          type: string
        bbox:
          description: Bounding box that covers all returned isochrones
          example:
          - 49.414057
          - 8.680894
          - 49.420514
          - 8.690123
          items:
            description: Bounding box that covers all returned isochrones
            format: double
            type: number
          type: array
        features:
          items:
            $ref: '#/components/schemas/GeoJSONIsochroneBase'
          type: array
        metadata:
          $ref: '#/components/schemas/IsochronesResponseInfo'
      type: object
    IsochronesResponseInfo:
      description: Information about the request
      properties:
        id:
          description: ID of the request (as passed in by the query)
          example: request123
          type: string
        attribution:
          description: Copyright and attribution information
          example: openrouteservice.org | OpenStreetMap contributors
          type: string
        service:
          description: The service that was requested
          example: isochrones
          type: string
        timestamp:
          description: Time that the request was made (UNIX Epoch time)
          example: 1549549847974
          format: int64
          type: integer
        query:
          $ref: '#/components/schemas/IsochronesRequest'
        engine:
          $ref: '#/components/schemas/EngineInfo'
        system_message:
          description: System message
          example: A message string configured in the service
          type: string
      type: object
    graphExportService:
      description: The request payload
      properties:
        bbox:
          description: The bounding box to use for the request as an array of `longitude/latitude`
            pairs
          example:
          - - 8.681495
            - 49.41461
          - - 8.686507
            - 49.41943
          items:
            description: The bounding box to use for the request as an array of `longitude/latitude`
              pairs
            example:
            - - 8.681495
              - 49.41461
            - - 8.686507
              - 49.41943
            items:
              description: The bounding box to use for the request as an array of
                `longitude/latitude` pairs
              format: double
              type: number
            type: array
          type: array
        profileName:
          type: string
        id:
          description: Arbitrary identification string of the request reflected in
            the meta information.
          example: export_request
          type: string
      required:
      - bbox
      title: Graph export Service
      type: object
    JSONWarning:
      description: Informs about possible difficulties like access restrictions on
        the generated route. Generates a corresponding `extras` object with the affected
        segments.
      example:
        code: 1
        message: This route may go over restricted roads
      properties:
        code:
          description: Identification code for the warning
          example: 1
          format: int32
          type: integer
        message:
          description: The message associated with the warning
          example: This route may go over restricted roads
          type: string
      type: object
    JsonEdge:
      properties:
        fromId:
          description: Id of the start point of the edge
          example: 1
          format: int32
          type: integer
        toId:
          description: Id of the end point of the edge
          example: 2
          format: int32
          type: integer
        weight:
          description: Weight of the corresponding edge in the given bounding box
          example: 123.45
          format: double
          type: number
      type: object
    JsonEdgeExtra:
      properties:
        edgeId:
          description: Id of the corresponding edge in the graph
          example: "1"
          type: string
        extra:
          description: Extra info stored on the edge
          example:
            surface_quality_known: "true"
          type: object
      type: object
    JsonExportResponse:
      description: The Export Response contains nodes and edge weights from the requested
        BBox
      properties:
        nodes:
          items:
            $ref: '#/components/schemas/JsonNode'
          type: array
        edges:
          items:
            $ref: '#/components/schemas/JsonEdge'
          type: array
        edges_extra:
          items:
            $ref: '#/components/schemas/JsonEdgeExtra'
          type: array
        warning:
          $ref: '#/components/schemas/JSONWarning'
        nodes_count:
          format: int64
          type: integer
        edges_count:
          format: int64
          type: integer
      type: object
    JsonNode:
      properties:
        nodeId:
          description: Id of the corresponding node in the graph
          example: 1
          format: int32
          type: integer
        location:
          description: "{longitude},{latitude} coordinates of the closest accessible\
            \ point on the routing graph"
          example:
          - 8.678962
          - 49.40783
          items:
            description: "{longitude},{latitude} coordinates of the closest accessible\
              \ point on the routing graph"
            format: double
            type: number
          type: array
      type: object
    alternativeRoutes:
      description: "Specifies whether alternative routes are computed, and parameters\
        \ for the algorithm determining suitable alternatives."
      example:
        target_count: 2
        weight_factor: 1.6
      properties:
        target_count:
          description: Target number of alternative routes to compute. Service returns
            up to this number of routes that fulfill the share-factor and weight-factor
            constraints.
          example: 2
          format: int32
          type: integer
        weight_factor:
          description: Maximum factor by which route weight may diverge from the optimal
            route. The default value of 1.4 means alternatives can be up to 1.4 times
            longer (costly) than the optimal route.
          example: 1.4
          format: double
          type: number
        share_factor:
          description: Maximum fraction of the route that alternatives may share with
            the optimal route. The default value of 0.6 means alternatives can share
            up to 60% of path segments with the optimal route.
          example: 0.6
          format: double
          type: number
      title: Alternative Routes
      type: object
    directionsService:
      description: The JSON body request sent to the routing service which defines
        options and parameters regarding the route to generate.
      example:
        profileName: profileName
        instructions: true
        schedule_rows: 3
        bearings:
        - - 30
          - 20
        - []
        - - 40
          - 20
        language: en
        units: m
        maximum_speed: 90
        options:
          avoid_borders: controlled
        id: my_request
        walking_time: PT30M
        maneuvers: false
        suppress_warnings: false
        elevation: false
        roundabout_exits: false
        schedule_duration: PT30M
        radiuses:
        - 200
        - -1
        - 30
        preference: recommended
        coordinates:
        - - 8.681495
          - 49.41461
        - - 8.686507
          - 49.41943
        - - 8.687872
          - 49.420318
        instructions_format: text
        continue_straight: false
        schedule: true
        extra_info:
        - waytype
        - surface
        ignore_transfers: true
        geometry: true
        attributes:
        - avgspeed
        - percentage
        geometry_simplify: false
        alternative_routes:
          target_count: 2
          weight_factor: 1.6
        skip_segments:
        - 2
        - 4
      properties:
        coordinates:
          description: The waypoints to use for the route as an array of `longitude/latitude`
            pairs in WGS 84 (EPSG:4326)
          example:
          - - 8.681495
            - 49.41461
          - - 8.686507
            - 49.41943
          - - 8.687872
            - 49.420318
          items:
            description: The waypoints to use for the route as an array of `longitude/latitude`
              pairs in WGS 84 (EPSG:4326)
            example:
            - - 8.681495
              - 49.41461
            - - 8.686507
              - 49.41943
            - - 8.687872
              - 49.420318
            items:
              description: The waypoints to use for the route as an array of `longitude/latitude`
                pairs in WGS 84 (EPSG:4326)
              format: double
              type: number
            type: array
          type: array
        profileName:
          type: string
        id:
          description: Arbitrary identification string of the request reflected in
            the meta information.
          example: my_request
          type: string
        preference:
          default: recommended
          description: Specifies the route preference
          enum:
          - fastest
          - shortest
          - recommended
          type: string
        units:
          default: m
          description: Specifies the distance unit.
          enum:
          - m
          - km
          - mi
          type: string
        language:
          default: en
          description: Language for the route instructions.
          enum:
          - cs
          - cs-cz
          - da
          - dk-da
          - de
          - de-de
          - en
          - en-us
          - eo
          - eo-eo
          - es
          - es-es
          - fi
          - fi-fi
          - fr
          - fr-fr
          - gr
          - gr-gr
          - he
          - he-il
          - hu
          - hu-hu
          - id
          - id-id
          - it
          - it-it
          - ja
          - ja-jp
          - ne
          - ne-np
          - nl
          - nl-nl
          - nb
          - nb-no
          - pl
          - pl-pl
          - pt
          - pt-pt
          - ro
          - ro-ro
          - ru
          - ru-ru
          - tr
          - tr-tr
          - ua
          - ua-ua
          - vi
          - vi-vn
          - zh
          - zh-cn
          type: string
        geometry:
          default: true
          description: 'Specifies whether to return geometry. '
          type: boolean
          x-validWhen:
            ref: format
            value:
            - json
        instructions:
          default: true
          description: Specifies whether to return instructions.
          type: boolean
        instructions_format:
          default: text
          description: Select html for more verbose instructions.
          enum:
          - html
          - text
          type: string
        roundabout_exits:
          default: false
          description: 'Provides bearings of the entrance and all passed roundabout
            exits. Adds the `exit_bearings` array to the step object in the response. '
          type: boolean
        attributes:
          description: List of route attributes
          example:
          - avgspeed
          - percentage
          items:
            description: List of route attributes
            enum:
            - avgspeed
            - detourfactor
            - percentage
            example: "[\"avgspeed\",\"percentage\"]"
            type: string
          type: array
        maneuvers:
          default: false
          description: 'Specifies whether the maneuver object is included into the
            step object or not. '
          type: boolean
        radiuses:
          description: "A list of maximum distances (measured in metres) that limit\
            \ the search of nearby road segments to every given waypoint. The values\
            \ must be greater than 0, the value of -1 specifies using the maximum\
            \ possible search radius. The number of radiuses correspond to the number\
            \ of waypoints. If only a single value is given, it will be applied to\
            \ all waypoints."
          example:
          - 200
          - -1
          - 30
          items:
            description: "A list of maximum distances (measured in metres) that limit\
              \ the search of nearby road segments to every given waypoint. The values\
              \ must be greater than 0, the value of -1 specifies using the maximum\
              \ possible search radius. The number of radiuses correspond to the number\
              \ of waypoints. If only a single value is given, it will be applied\
              \ to all waypoints."
            format: double
            type: number
          type: array
        bearings:
          description: |-
            Specifies a list of pairs (bearings and deviations) to filter the segments of the road network a waypoint can snap to.
            "For example `bearings=[[45,10],[120,20]]`.
            "Each pair is a comma-separated list that can consist of one or two float values, where the first value is the bearing and the second one is the allowed deviation from the bearing.
            "The bearing can take values between `0` and `360` clockwise from true north. If the deviation is not set, then the default value of `100` degrees is used.
            "The number of pairs must correspond to the number of waypoints.
            "The number of bearings corresponds to the length of waypoints-1 or waypoints. If the bearing information for the last waypoint is given, then this will control the sector from which the destination waypoint may be reached.
            "You can skip a bearing for a certain waypoint by passing an empty value for an array, e.g. `[30,20],[],[40,20]`.
          example:
          - - 30
            - 20
          - []
          - - 40
            - 20
          items:
            description: |-
              Specifies a list of pairs (bearings and deviations) to filter the segments of the road network a waypoint can snap to.
              "For example `bearings=[[45,10],[120,20]]`.
              "Each pair is a comma-separated list that can consist of one or two float values, where the first value is the bearing and the second one is the allowed deviation from the bearing.
              "The bearing can take values between `0` and `360` clockwise from true north. If the deviation is not set, then the default value of `100` degrees is used.
              "The number of pairs must correspond to the number of waypoints.
              "The number of bearings corresponds to the length of waypoints-1 or waypoints. If the bearing information for the last waypoint is given, then this will control the sector from which the destination waypoint may be reached.
              "You can skip a bearing for a certain waypoint by passing an empty value for an array, e.g. `[30,20],[],[40,20]`.
            example:
            - - 30
              - 20
            - []
            - - 40
              - 20
            items:
              description: |-
                Specifies a list of pairs (bearings and deviations) to filter the segments of the road network a waypoint can snap to.
                "For example `bearings=[[45,10],[120,20]]`.
                "Each pair is a comma-separated list that can consist of one or two float values, where the first value is the bearing and the second one is the allowed deviation from the bearing.
                "The bearing can take values between `0` and `360` clockwise from true north. If the deviation is not set, then the default value of `100` degrees is used.
                "The number of pairs must correspond to the number of waypoints.
                "The number of bearings corresponds to the length of waypoints-1 or waypoints. If the bearing information for the last waypoint is given, then this will control the sector from which the destination waypoint may be reached.
                "You can skip a bearing for a certain waypoint by passing an empty value for an array, e.g. `[30,20],[],[40,20]`.
              format: double
              type: number
              x-validWhen:
                ref: profile
                value: cycling-*
            type: array
            x-validWhen:
              ref: profile
              value: cycling-*
          type: array
          x-validWhen:
            ref: profile
            value: cycling-*
        continue_straight:
          default: false
          description: Forces the route to keep going straight at waypoints restricting
            uturns there even if it would be faster.
          type: boolean
        elevation:
          description: Specifies whether to return elevation values for points. Please
            note that elevation also gets encoded for json response encoded polyline.
          example: false
          type: boolean
        extra_info:
          description: The extra info items to include in the response
          example:
          - waytype
          - surface
          items:
            description: Specify which extra info items to include in the response
            enum:
            - steepness
            - suitability
            - surface
            - waycategory
            - waytype
            - tollways
            - traildifficulty
            - osmid
            - roadaccessrestrictions
            - countryinfo
            - green
            - noise
            - csv
            - shadow
            example: "[\"waytype\",\"surface\"]"
            type: string
          type: array
        options:
          $ref: '#/components/schemas/routeOptions'
        suppress_warnings:
          description: Suppress warning messages in the response
          example: false
          type: boolean
        geometry_simplify:
          default: false
          description: Specifies whether to simplify the geometry. Simplify geometry
            cannot be applied to routes with more than **one segment** and when `extra_info`
            is required.
          type: boolean
        skip_segments:
          description: Specifies the segments that should be skipped in the route
            calculation. A segment is the connection between two given coordinates
            and the counting starts with 1 for the connection between the first and
            second coordinate.
          example:
          - 2
          - 4
          items:
            description: Specifies the segments that should be skipped in the route
              calculation. A segment is the connection between two given coordinates
              and the counting starts with 1 for the connection between the first
              and second coordinate.
            format: int32
            type: integer
          type: array
        alternative_routes:
          $ref: '#/components/schemas/alternativeRoutes'
        maximum_speed:
          description: The maximum speed specified by user.
          example: 90
          format: double
          type: number
          x-validWhen:
            ref: profile
            value: driving-*
        schedule:
          default: false
          description: "If true, return a public transport schedule starting at <departure>\
            \ for the next <schedule_duration> minutes."
          example: true
          type: boolean
          x-validWhen:
            ref: profile
            value: public-transport
        schedule_duration:
          description: "The time window when requesting a public transport schedule.\
            \ The format is passed as ISO 8601 duration: https://en.wikipedia.org/wiki/ISO_8601#Durations"
          example: PT30M
          type: string
          x-validWhen:
            ref: schedule
            value: true
        schedule_rows:
          description: The maximum amount of entries that should be returned when
            requesting a schedule.
          example: 3
          format: int32
          type: integer
          x-validWhen:
            ref: schedule
            value: true
        walking_time:
          default: PT15M
          description: "Maximum duration for walking access and egress of public transport.\
            \ The value is passed in ISO 8601 duration format: https://en.wikipedia.org/wiki/ISO_8601#Durations"
          example: PT30M
          type: string
          x-validWhen:
            ref: profile
            value: public-transport
        ignore_transfers:
          default: false
          description: Specifies if transfers as criterion should be ignored.
          example: true
          type: boolean
          x-validWhen:
            ref: profile
            value: public-transport
      required:
      - coordinates
      title: Directions Service
      type: object
    JSONExtra:
      description: An object representing one of the extra info items requested
      example:
        summary:
        - amount: 23.8
          distance: 123.1
          value: 5
        - amount: 23.8
          distance: 123.1
          value: 5
        values:
        - - 0
          - 3
          - 26
        - - 3
          - 10
          - 12
      properties:
        values:
          description: "A list of values representing a section of the route. The\
            \ individual values are: \nValue 1: Indice of the staring point of the\
            \ geometry for this section,\nValue 2: Indice of the end point of the\
            \ geoemetry for this sections,\nValue 3: [Value](https://GIScience.github.io/openrouteservice/api-reference/endpoints/directions/extra-info/)\
            \ assigned to this section."
          example:
          - - 0
            - 3
            - 26
          - - 3
            - 10
            - 12
          items:
            description: "A list of values representing a section of the route. The\
              \ individual values are: \nValue 1: Indice of the staring point of the\
              \ geometry for this section,\nValue 2: Indice of the end point of the\
              \ geoemetry for this sections,\nValue 3: [Value](https://GIScience.github.io/openrouteservice/api-reference/endpoints/directions/extra-info/)\
              \ assigned to this section."
            example:
            - - 0
              - 3
              - 26
            - - 3
              - 10
              - 12
            items:
              description: "A list of values representing a section of the route.\
                \ The individual values are: \nValue 1: Indice of the staring point\
                \ of the geometry for this section,\nValue 2: Indice of the end point\
                \ of the geoemetry for this sections,\nValue 3: [Value](https://GIScience.github.io/openrouteservice/api-reference/endpoints/directions/extra-info/)\
                \ assigned to this section."
              format: int64
              type: integer
            type: array
          type: array
        summary:
          description: List representing the summary of the extra info items.
          items:
            $ref: '#/components/schemas/JSONExtraSummary'
          type: array
      type: object
    JSONExtraSummary:
      description: List representing the summary of the extra info items.
      example:
        amount: 23.8
        distance: 123.1
        value: 5
      properties:
        value:
          description: "[Value](https://giscience.github.io/openrouteservice/api-reference/endpoints/directions/extra-info/)\
            \ of a info category."
          example: 5
          format: double
          type: number
        distance:
          description: Cumulative distance of this value.
          example: 123.1
          format: double
          type: number
        amount:
          description: Category percentage of the entire route.
          example: 23.8
          format: double
          type: number
      type: object
    JSONIndividualRouteResponse:
      description: An individual JSON based route created by the service
      example:
        summary:
          duration: 604
          descent: 201.3
          fare: 6
          ascent: 166.3
          distance: 12.6
          transfers: 0
        arrival: 2020-01-31T13:15:00+01:00
        bbox:
        - 49.414057
        - 8.680894
        - 49.420514
        - 8.690123
        warnings:
        - code: 1
          message: This route may go over restricted roads
        - code: 1
          message: This route may go over restricted roads
        legs:
        - instructions:
          - duration: 96.2
            exit_number: 2
            exit_bearings:
            - 10
            - 45
            - 60
            distance: 245
            instruction: Turn right onto Berliner StraÃŸe
            name: Berliner StraÃŸe
            type: 1
            maneuver:
              bearing_after: 96
              location:
              - 8.678962
              - 49.407819
              bearing_before: 24
            way_points:
            - 45
            - 48
          - duration: 96.2
            exit_number: 2
            exit_bearings:
            - 10
            - 45
            - 60
            distance: 245
            instruction: Turn right onto Berliner StraÃŸe
            name: Berliner StraÃŸe
            type: 1
            maneuver:
              bearing_after: 96
              location:
              - 8.678962
              - 49.407819
              bearing_before: 24
            way_points:
            - 45
            - 48
          trip_id: "trip_id: vrn-19-39A-1-2-21-H-8-Special-50-42"
          route_id: vrn-19-39A-1
          route_long_name: RNV Bus 39A
          distance: 245
          arrival: 2020-01-31T13:15:00+01:00
          route_desc: Bus
          type: pt
          trip_headsign: Bismarckplatz - Speyererhof - EMBL - Boxberg - Mombertplatz
          departure_location: "Dossenheim, SÃ¼d Bstg G1"
          feed_id: gtfs_0
          duration: 96.2
          route_type: 1
          route_short_name: 39A
          geometry: "yuqlH{i~s@gaUe@VgEQFcBRbB_C"
          departure: 2020-01-31T12:45:00+01:00
          stops:
          - planned_departure_time: 2022-07-04T13:22:00Z
            arrival_time: 2022-07-04T13:22:00Z
            predicted_arrival_time: 2022-07-04T13:22:00Z
            arrival_cancelled: false
            stop_id: de:08221:1138:0:O
            name: "Heidelberg, Alois-Link-Platz"
            predicted_departure_time: 2022-07-04T13:22:00Z
            location:
            - 8.6912542
            - 49.399979
            planned_arrival_time: 2022-07-04T13:22:00Z
            departure_time: 2022-07-04T13:22:00Z
            departure_cancelled: false
          - planned_departure_time: 2022-07-04T13:22:00Z
            arrival_time: 2022-07-04T13:22:00Z
            predicted_arrival_time: 2022-07-04T13:22:00Z
            arrival_cancelled: false
            stop_id: de:08221:1138:0:O
            name: "Heidelberg, Alois-Link-Platz"
            predicted_departure_time: 2022-07-04T13:22:00Z
            location:
            - 8.6912542
            - 49.399979
            planned_arrival_time: 2022-07-04T13:22:00Z
            departure_time: 2022-07-04T13:22:00Z
            departure_cancelled: false
          is_in_same_vehicle_as_previous: false
        - instructions:
          - duration: 96.2
            exit_number: 2
            exit_bearings:
            - 10
            - 45
            - 60
            distance: 245
            instruction: Turn right onto Berliner StraÃŸe
            name: Berliner StraÃŸe
            type: 1
            maneuver:
              bearing_after: 96
              location:
              - 8.678962
              - 49.407819
              bearing_before: 24
            way_points:
            - 45
            - 48
          - duration: 96.2
            exit_number: 2
            exit_bearings:
            - 10
            - 45
            - 60
            distance: 245
            instruction: Turn right onto Berliner StraÃŸe
            name: Berliner StraÃŸe
            type: 1
            maneuver:
              bearing_after: 96
              location:
              - 8.678962
              - 49.407819
              bearing_before: 24
            way_points:
            - 45
            - 48
          trip_id: "trip_id: vrn-19-39A-1-2-21-H-8-Special-50-42"
          route_id: vrn-19-39A-1
          route_long_name: RNV Bus 39A
          distance: 245
          arrival: 2020-01-31T13:15:00+01:00
          route_desc: Bus
          type: pt
          trip_headsign: Bismarckplatz - Speyererhof - EMBL - Boxberg - Mombertplatz
          departure_location: "Dossenheim, SÃ¼d Bstg G1"
          feed_id: gtfs_0
          duration: 96.2
          route_type: 1
          route_short_name: 39A
          geometry: "yuqlH{i~s@gaUe@VgEQFcBRbB_C"
          departure: 2020-01-31T12:45:00+01:00
          stops:
          - planned_departure_time: 2022-07-04T13:22:00Z
            arrival_time: 2022-07-04T13:22:00Z
            predicted_arrival_time: 2022-07-04T13:22:00Z
            arrival_cancelled: false
            stop_id: de:08221:1138:0:O
            name: "Heidelberg, Alois-Link-Platz"
            predicted_departure_time: 2022-07-04T13:22:00Z
            location:
            - 8.6912542
            - 49.399979
            planned_arrival_time: 2022-07-04T13:22:00Z
            departure_time: 2022-07-04T13:22:00Z
            departure_cancelled: false
          - planned_departure_time: 2022-07-04T13:22:00Z
            arrival_time: 2022-07-04T13:22:00Z
            predicted_arrival_time: 2022-07-04T13:22:00Z
            arrival_cancelled: false
            stop_id: de:08221:1138:0:O
            name: "Heidelberg, Alois-Link-Platz"
            predicted_departure_time: 2022-07-04T13:22:00Z
            location:
            - 8.6912542
            - 49.399979
            planned_arrival_time: 2022-07-04T13:22:00Z
            departure_time: 2022-07-04T13:22:00Z
            departure_cancelled: false
          is_in_same_vehicle_as_previous: false
        extras:
          key:
            summary:
            - amount: 23.8
              distance: 123.1
              value: 5
            - amount: 23.8
              distance: 123.1
              value: 5
            values:
            - - 0
              - 3
              - 26
            - - 3
              - 10
              - 12
        geometry: "yuqlH{i~s@gaUe@VgEQFcBRbB_C"
        departure: 2020-01-31T12:45:00+01:00
        segments:
        - duration: 37.7
          descent: 45.2
          ascent: 56.3
          distance: 253
          percentage: 43.2
          avgspeed: 56.3
          steps:
          - duration: 96.2
            exit_number: 2
            exit_bearings:
            - 10
            - 45
            - 60
            distance: 245
            instruction: Turn right onto Berliner StraÃŸe
            name: Berliner StraÃŸe
            type: 1
            maneuver:
              bearing_after: 96
              location:
              - 8.678962
              - 49.407819
              bearing_before: 24
            way_points:
            - 45
            - 48
          - duration: 96.2
            exit_number: 2
            exit_bearings:
            - 10
            - 45
            - 60
            distance: 245
            instruction: Turn right onto Berliner StraÃŸe
            name: Berliner StraÃŸe
            type: 1
            maneuver:
              bearing_after: 96
              location:
              - 8.678962
              - 49.407819
              bearing_before: 24
            way_points:
            - 45
            - 48
          detourfactor: 0.5
        - duration: 37.7
          descent: 45.2
          ascent: 56.3
          distance: 253
          percentage: 43.2
          avgspeed: 56.3
          steps:
          - duration: 96.2
            exit_number: 2
            exit_bearings:
            - 10
            - 45
            - 60
            distance: 245
            instruction: Turn right onto Berliner StraÃŸe
            name: Berliner StraÃŸe
            type: 1
            maneuver:
              bearing_after: 96
              location:
              - 8.678962
              - 49.407819
              bearing_before: 24
            way_points:
            - 45
            - 48
          - duration: 96.2
            exit_number: 2
            exit_bearings:
            - 10
            - 45
            - 60
            distance: 245
            instruction: Turn right onto Berliner StraÃŸe
            name: Berliner StraÃŸe
            type: 1
            maneuver:
              bearing_after: 96
              location:
              - 8.678962
              - 49.407819
              bearing_before: 24
            way_points:
            - 45
            - 48
          detourfactor: 0.5
        way_points:
        - 0
        - 23
      properties:
        summary:
          $ref: '#/components/schemas/JSONSummary'
        segments:
          description: List containing the segments and its corresponding steps which
            make up the route.
          items:
            $ref: '#/components/schemas/JSONSegment'
          type: array
        bbox:
          description: A bounding box which contains the entire route
          example:
          - 49.414057
          - 8.680894
          - 49.420514
          - 8.690123
          items:
            description: A bounding box which contains the entire route
            format: double
            type: number
          type: array
        geometry:
          description: The geometry of the route. For JSON route responses this is
            an encoded polyline.
          example: "yuqlH{i~s@gaUe@VgEQFcBRbB_C"
          type: string
        way_points:
          description: List containing the indices of way points corresponding to
            the *geometry*.
          example:
          - 0
          - 23
          items:
            description: List containing the indices of way points corresponding to
              the *geometry*.
            format: int32
            type: integer
          type: array
        warnings:
          description: List of warnings that have been generated for the route
          items:
            $ref: '#/components/schemas/JSONWarning'
          type: array
        legs:
          description: List containing the legs the route consists of.
          items:
            $ref: '#/components/schemas/JSONLeg'
          type: array
        extras:
          additionalProperties:
            $ref: '#/components/schemas/JSONExtra'
          description: List of extra info objects representing the extra info items
            that were requested for the route.
          type: object
        departure:
          description: Departure date and time
          example: 2020-01-31T12:45:00+01:00
          format: date-time
          type: string
          x-validWhen:
            ref: departure
            value: true
        arrival:
          description: Arrival date and time
          example: 2020-01-31T13:15:00+01:00
          format: date-time
          type: string
          x-validWhen:
            ref: arrival
            value: true
      type: object
    JSONLeg:
      description: Leg of a route
      example:
        instructions:
        - duration: 96.2
          exit_number: 2
          exit_bearings:
          - 10
          - 45
          - 60
          distance: 245
          instruction: Turn right onto Berliner StraÃŸe
          name: Berliner StraÃŸe
          type: 1
          maneuver:
            bearing_after: 96
            location:
            - 8.678962
            - 49.407819
            bearing_before: 24
          way_points:
          - 45
          - 48
        - duration: 96.2
          exit_number: 2
          exit_bearings:
          - 10
          - 45
          - 60
          distance: 245
          instruction: Turn right onto Berliner StraÃŸe
          name: Berliner StraÃŸe
          type: 1
          maneuver:
            bearing_after: 96
            location:
            - 8.678962
            - 49.407819
            bearing_before: 24
          way_points:
          - 45
          - 48
        trip_id: "trip_id: vrn-19-39A-1-2-21-H-8-Special-50-42"
        route_id: vrn-19-39A-1
        route_long_name: RNV Bus 39A
        distance: 245
        arrival: 2020-01-31T13:15:00+01:00
        route_desc: Bus
        type: pt
        trip_headsign: Bismarckplatz - Speyererhof - EMBL - Boxberg - Mombertplatz
        departure_location: "Dossenheim, SÃ¼d Bstg G1"
        feed_id: gtfs_0
        duration: 96.2
        route_type: 1
        route_short_name: 39A
        geometry: "yuqlH{i~s@gaUe@VgEQFcBRbB_C"
        departure: 2020-01-31T12:45:00+01:00
        stops:
        - planned_departure_time: 2022-07-04T13:22:00Z
          arrival_time: 2022-07-04T13:22:00Z
          predicted_arrival_time: 2022-07-04T13:22:00Z
          arrival_cancelled: false
          stop_id: de:08221:1138:0:O
          name: "Heidelberg, Alois-Link-Platz"
          predicted_departure_time: 2022-07-04T13:22:00Z
          location:
          - 8.6912542
          - 49.399979
          planned_arrival_time: 2022-07-04T13:22:00Z
          departure_time: 2022-07-04T13:22:00Z
          departure_cancelled: false
        - planned_departure_time: 2022-07-04T13:22:00Z
          arrival_time: 2022-07-04T13:22:00Z
          predicted_arrival_time: 2022-07-04T13:22:00Z
          arrival_cancelled: false
          stop_id: de:08221:1138:0:O
          name: "Heidelberg, Alois-Link-Platz"
          predicted_departure_time: 2022-07-04T13:22:00Z
          location:
          - 8.6912542
          - 49.399979
          planned_arrival_time: 2022-07-04T13:22:00Z
          departure_time: 2022-07-04T13:22:00Z
          departure_cancelled: false
        is_in_same_vehicle_as_previous: false
      properties:
        type:
          description: "The type of the leg, possible values are currently 'walk'\
            \ and 'pt'."
          example: pt
          type: string
        departure_location:
          description: The departure location of the leg.
          example: "Dossenheim, SÃ¼d Bstg G1"
          type: string
        trip_headsign:
          description: The headsign of the public transport vehicle of the leg.
          example: Bismarckplatz - Speyererhof - EMBL - Boxberg - Mombertplatz
          type: string
        route_long_name:
          description: The public transport route name of the leg.
          example: RNV Bus 39A
          type: string
        route_short_name:
          description: The public transport route name (short version) of the leg.
          example: 39A
          type: string
        route_desc:
          description: The route description of the leg (if provided in the GTFS data
            set).
          example: Bus
          type: string
        route_type:
          description: The route type of the leg (if provided in the GTFS data set).
          example: 1
          format: int32
          type: integer
        distance:
          description: The distance for the leg in metres.
          example: 245
          format: double
          type: number
        duration:
          description: The duration for the leg in seconds.
          example: 96.2
          format: double
          type: number
        departure:
          description: Departure date and time
          example: 2020-01-31T12:45:00+01:00
          format: date-time
          type: string
          x-validWhen:
            ref: departure
            value: true
        arrival:
          description: Arrival date and time
          example: 2020-01-31T13:15:00+01:00
          format: date-time
          type: string
          x-validWhen:
            ref: arrival
            value: true
        feed_id:
          description: The feed ID this public transport leg based its information
            from.
          example: gtfs_0
          type: string
        trip_id:
          description: The trip ID of this public transport leg.
          example: "trip_id: vrn-19-39A-1-2-21-H-8-Special-50-42"
          type: string
        route_id:
          description: The route ID of this public transport leg.
          example: vrn-19-39A-1
          type: string
        is_in_same_vehicle_as_previous:
          description: Whether the legs continues in the same vehicle as the previous
            one.
          example: false
          type: boolean
        geometry:
          description: The geometry of the leg. This is an encoded polyline.
          example: "yuqlH{i~s@gaUe@VgEQFcBRbB_C"
          type: string
        instructions:
          description: List containing the specific steps the segment consists of.
          items:
            $ref: '#/components/schemas/JSONStep'
          type: array
        stops:
          description: List containing the stops the along the leg.
          items:
            $ref: '#/components/schemas/JSONPtStop'
          type: array
      type: object
    JSONPtStop:
      description: Stop of a public transport leg
      example:
        planned_departure_time: 2022-07-04T13:22:00Z
        arrival_time: 2022-07-04T13:22:00Z
        predicted_arrival_time: 2022-07-04T13:22:00Z
        arrival_cancelled: false
        stop_id: de:08221:1138:0:O
        name: "Heidelberg, Alois-Link-Platz"
        predicted_departure_time: 2022-07-04T13:22:00Z
        location:
        - 8.6912542
        - 49.399979
        planned_arrival_time: 2022-07-04T13:22:00Z
        departure_time: 2022-07-04T13:22:00Z
        departure_cancelled: false
      properties:
        stop_id:
          description: The ID of the stop.
          example: de:08221:1138:0:O
          type: string
        name:
          description: The name of the stop.
          example: "Heidelberg, Alois-Link-Platz"
          type: string
        location:
          description: The location of the stop.
          example:
          - 8.6912542
          - 49.399979
          items:
            description: The location of the stop.
            format: double
            type: number
          type: array
        arrival_time:
          description: Arrival time of the stop.
          example: 2022-07-04T13:22:00Z
          format: date-time
          type: string
        planned_arrival_time:
          description: Planned arrival time of the stop.
          example: 2022-07-04T13:22:00Z
          format: date-time
          type: string
        predicted_arrival_time:
          description: Predicted arrival time of the stop.
          example: 2022-07-04T13:22:00Z
          format: date-time
          type: string
        arrival_cancelled:
          description: Whether arrival at the stop was cancelled.
          example: false
          type: boolean
        departure_time:
          description: Departure time of the stop.
          example: 2022-07-04T13:22:00Z
          format: date-time
          type: string
        planned_departure_time:
          description: Planned departure time of the stop.
          example: 2022-07-04T13:22:00Z
          format: date-time
          type: string
        predicted_departure_time:
          description: Predicted departure time of the stop.
          example: 2022-07-04T13:22:00Z
          format: date-time
          type: string
        departure_cancelled:
          description: Whether departure at the stop was cancelled.
          example: false
          type: boolean
      type: object
    JSONRouteResponse:
      example:
        routes:
        - summary:
            duration: 604
            descent: 201.3
            fare: 6
            ascent: 166.3
            distance: 12.6
            transfers: 0
          arrival: 2020-01-31T13:15:00+01:00
          bbox:
          - 49.414057
          - 8.680894
          - 49.420514
          - 8.690123
          warnings:
          - code: 1
            message: This route may go over restricted roads
          - code: 1
            message: This route may go over restricted roads
          legs:
          - instructions:
            - duration: 96.2
              exit_number: 2
              exit_bearings:
              - 10
              - 45
              - 60
              distance: 245
              instruction: Turn right onto Berliner StraÃŸe
              name: Berliner StraÃŸe
              type: 1
              maneuver:
                bearing_after: 96
                location:
                - 8.678962
                - 49.407819
                bearing_before: 24
              way_points:
              - 45
              - 48
            - duration: 96.2
              exit_number: 2
              exit_bearings:
              - 10
              - 45
              - 60
              distance: 245
              instruction: Turn right onto Berliner StraÃŸe
              name: Berliner StraÃŸe
              type: 1
              maneuver:
                bearing_after: 96
                location:
                - 8.678962
                - 49.407819
                bearing_before: 24
              way_points:
              - 45
              - 48
            trip_id: "trip_id: vrn-19-39A-1-2-21-H-8-Special-50-42"
            route_id: vrn-19-39A-1
            route_long_name: RNV Bus 39A
            distance: 245
            arrival: 2020-01-31T13:15:00+01:00
            route_desc: Bus
            type: pt
            trip_headsign: Bismarckplatz - Speyererhof - EMBL - Boxberg - Mombertplatz
            departure_location: "Dossenheim, SÃ¼d Bstg G1"
            feed_id: gtfs_0
            duration: 96.2
            route_type: 1
            route_short_name: 39A
            geometry: "yuqlH{i~s@gaUe@VgEQFcBRbB_C"
            departure: 2020-01-31T12:45:00+01:00
            stops:
            - planned_departure_time: 2022-07-04T13:22:00Z
              arrival_time: 2022-07-04T13:22:00Z
              predicted_arrival_time: 2022-07-04T13:22:00Z
              arrival_cancelled: false
              stop_id: de:08221:1138:0:O
              name: "Heidelberg, Alois-Link-Platz"
              predicted_departure_time: 2022-07-04T13:22:00Z
              location:
              - 8.6912542
              - 49.399979
              planned_arrival_time: 2022-07-04T13:22:00Z
              departure_time: 2022-07-04T13:22:00Z
              departure_cancelled: false
            - planned_departure_time: 2022-07-04T13:22:00Z
              arrival_time: 2022-07-04T13:22:00Z
              predicted_arrival_time: 2022-07-04T13:22:00Z
              arrival_cancelled: false
              stop_id: de:08221:1138:0:O
              name: "Heidelberg, Alois-Link-Platz"
              predicted_departure_time: 2022-07-04T13:22:00Z
              location:
              - 8.6912542
              - 49.399979
              planned_arrival_time: 2022-07-04T13:22:00Z
              departure_time: 2022-07-04T13:22:00Z
              departure_cancelled: false
            is_in_same_vehicle_as_previous: false
          - instructions:
            - duration: 96.2
              exit_number: 2
              exit_bearings:
              - 10
              - 45
              - 60
              distance: 245
              instruction: Turn right onto Berliner StraÃŸe
              name: Berliner StraÃŸe
              type: 1
              maneuver:
                bearing_after: 96
                location:
                - 8.678962
                - 49.407819
                bearing_before: 24
              way_points:
              - 45
              - 48
            - duration: 96.2
              exit_number: 2
              exit_bearings:
              - 10
              - 45
              - 60
              distance: 245
              instruction: Turn right onto Berliner StraÃŸe
              name: Berliner StraÃŸe
              type: 1
              maneuver:
                bearing_after: 96
                location:
                - 8.678962
                - 49.407819
                bearing_before: 24
              way_points:
              - 45
              - 48
            trip_id: "trip_id: vrn-19-39A-1-2-21-H-8-Special-50-42"
            route_id: vrn-19-39A-1
            route_long_name: RNV Bus 39A
            distance: 245
            arrival: 2020-01-31T13:15:00+01:00
            route_desc: Bus
            type: pt
            trip_headsign: Bismarckplatz - Speyererhof - EMBL - Boxberg - Mombertplatz
            departure_location: "Dossenheim, SÃ¼d Bstg G1"
            feed_id: gtfs_0
            duration: 96.2
            route_type: 1
            route_short_name: 39A
            geometry: "yuqlH{i~s@gaUe@VgEQFcBRbB_C"
            departure: 2020-01-31T12:45:00+01:00
            stops:
            - planned_departure_time: 2022-07-04T13:22:00Z
              arrival_time: 2022-07-04T13:22:00Z
              predicted_arrival_time: 2022-07-04T13:22:00Z
              arrival_cancelled: false
              stop_id: de:08221:1138:0:O
              name: "Heidelberg, Alois-Link-Platz"
              predicted_departure_time: 2022-07-04T13:22:00Z
              location:
              - 8.6912542
              - 49.399979
              planned_arrival_time: 2022-07-04T13:22:00Z
              departure_time: 2022-07-04T13:22:00Z
              departure_cancelled: false
            - planned_departure_time: 2022-07-04T13:22:00Z
              arrival_time: 2022-07-04T13:22:00Z
              predicted_arrival_time: 2022-07-04T13:22:00Z
              arrival_cancelled: false
              stop_id: de:08221:1138:0:O
              name: "Heidelberg, Alois-Link-Platz"
              predicted_departure_time: 2022-07-04T13:22:00Z
              location:
              - 8.6912542
              - 49.399979
              planned_arrival_time: 2022-07-04T13:22:00Z
              departure_time: 2022-07-04T13:22:00Z
              departure_cancelled: false
            is_in_same_vehicle_as_previous: false
          extras:
            key:
              summary:
              - amount: 23.8
                distance: 123.1
                value: 5
              - amount: 23.8
                distance: 123.1
                value: 5
              values:
              - - 0
                - 3
                - 26
              - - 3
                - 10
                - 12
          geometry: "yuqlH{i~s@gaUe@VgEQFcBRbB_C"
          departure: 2020-01-31T12:45:00+01:00
          segments:
          - duration: 37.7
            descent: 45.2
            ascent: 56.3
            distance: 253
            percentage: 43.2
            avgspeed: 56.3
            steps:
            - duration: 96.2
              exit_number: 2
              exit_bearings:
              - 10
              - 45
              - 60
              distance: 245
              instruction: Turn right onto Berliner StraÃŸe
              name: Berliner StraÃŸe
              type: 1
              maneuver:
                bearing_after: 96
                location:
                - 8.678962
                - 49.407819
                bearing_before: 24
              way_points:
              - 45
              - 48
            - duration: 96.2
              exit_number: 2
              exit_bearings:
              - 10
              - 45
              - 60
              distance: 245
              instruction: Turn right onto Berliner StraÃŸe
              name: Berliner StraÃŸe
              type: 1
              maneuver:
                bearing_after: 96
                location:
                - 8.678962
                - 49.407819
                bearing_before: 24
              way_points:
              - 45
              - 48
            detourfactor: 0.5
          - duration: 37.7
            descent: 45.2
            ascent: 56.3
            distance: 253
            percentage: 43.2
            avgspeed: 56.3
            steps:
            - duration: 96.2
              exit_number: 2
              exit_bearings:
              - 10
              - 45
              - 60
              distance: 245
              instruction: Turn right onto Berliner StraÃŸe
              name: Berliner StraÃŸe
              type: 1
              maneuver:
                bearing_after: 96
                location:
                - 8.678962
                - 49.407819
                bearing_before: 24
              way_points:
              - 45
              - 48
            - duration: 96.2
              exit_number: 2
              exit_bearings:
              - 10
              - 45
              - 60
              distance: 245
              instruction: Turn right onto Berliner StraÃŸe
              name: Berliner StraÃŸe
              type: 1
              maneuver:
                bearing_after: 96
                location:
                - 8.678962
                - 49.407819
                bearing_before: 24
              way_points:
              - 45
              - 48
            detourfactor: 0.5
          way_points:
          - 0
          - 23
        - summary:
            duration: 604
            descent: 201.3
            fare: 6
            ascent: 166.3
            distance: 12.6
            transfers: 0
          arrival: 2020-01-31T13:15:00+01:00
          bbox:
          - 49.414057
          - 8.680894
          - 49.420514
          - 8.690123
          warnings:
          - code: 1
            message: This route may go over restricted roads
          - code: 1
            message: This route may go over restricted roads
          legs:
          - instructions:
            - duration: 96.2
              exit_number: 2
              exit_bearings:
              - 10
              - 45
              - 60
              distance: 245
              instruction: Turn right onto Berliner StraÃŸe
              name: Berliner StraÃŸe
              type: 1
              maneuver:
                bearing_after: 96
                location:
                - 8.678962
                - 49.407819
                bearing_before: 24
              way_points:
              - 45
              - 48
            - duration: 96.2
              exit_number: 2
              exit_bearings:
              - 10
              - 45
              - 60
              distance: 245
              instruction: Turn right onto Berliner StraÃŸe
              name: Berliner StraÃŸe
              type: 1
              maneuver:
                bearing_after: 96
                location:
                - 8.678962
                - 49.407819
                bearing_before: 24
              way_points:
              - 45
              - 48
            trip_id: "trip_id: vrn-19-39A-1-2-21-H-8-Special-50-42"
            route_id: vrn-19-39A-1
            route_long_name: RNV Bus 39A
            distance: 245
            arrival: 2020-01-31T13:15:00+01:00
            route_desc: Bus
            type: pt
            trip_headsign: Bismarckplatz - Speyererhof - EMBL - Boxberg - Mombertplatz
            departure_location: "Dossenheim, SÃ¼d Bstg G1"
            feed_id: gtfs_0
            duration: 96.2
            route_type: 1
            route_short_name: 39A
            geometry: "yuqlH{i~s@gaUe@VgEQFcBRbB_C"
            departure: 2020-01-31T12:45:00+01:00
            stops:
            - planned_departure_time: 2022-07-04T13:22:00Z
              arrival_time: 2022-07-04T13:22:00Z
              predicted_arrival_time: 2022-07-04T13:22:00Z
              arrival_cancelled: false
              stop_id: de:08221:1138:0:O
              name: "Heidelberg, Alois-Link-Platz"
              predicted_departure_time: 2022-07-04T13:22:00Z
              location:
              - 8.6912542
              - 49.399979
              planned_arrival_time: 2022-07-04T13:22:00Z
              departure_time: 2022-07-04T13:22:00Z
              departure_cancelled: false
            - planned_departure_time: 2022-07-04T13:22:00Z
              arrival_time: 2022-07-04T13:22:00Z
              predicted_arrival_time: 2022-07-04T13:22:00Z
              arrival_cancelled: false
              stop_id: de:08221:1138:0:O
              name: "Heidelberg, Alois-Link-Platz"
              predicted_departure_time: 2022-07-04T13:22:00Z
              location:
              - 8.6912542
              - 49.399979
              planned_arrival_time: 2022-07-04T13:22:00Z
              departure_time: 2022-07-04T13:22:00Z
              departure_cancelled: false
            is_in_same_vehicle_as_previous: false
          - instructions:
            - duration: 96.2
              exit_number: 2
              exit_bearings:
              - 10
              - 45
              - 60
              distance: 245
              instruction: Turn right onto Berliner StraÃŸe
              name: Berliner StraÃŸe
              type: 1
              maneuver:
                bearing_after: 96
                location:
                - 8.678962
                - 49.407819
                bearing_before: 24
              way_points:
              - 45
              - 48
            - duration: 96.2
              exit_number: 2
              exit_bearings:
              - 10
              - 45
              - 60
              distance: 245
              instruction: Turn right onto Berliner StraÃŸe
              name: Berliner StraÃŸe
              type: 1
              maneuver:
                bearing_after: 96
                location:
                - 8.678962
                - 49.407819
                bearing_before: 24
              way_points:
              - 45
              - 48
            trip_id: "trip_id: vrn-19-39A-1-2-21-H-8-Special-50-42"
            route_id: vrn-19-39A-1
            route_long_name: RNV Bus 39A
            distance: 245
            arrival: 2020-01-31T13:15:00+01:00
            route_desc: Bus
            type: pt
            trip_headsign: Bismarckplatz - Speyererhof - EMBL - Boxberg - Mombertplatz
            departure_location: "Dossenheim, SÃ¼d Bstg G1"
            feed_id: gtfs_0
            duration: 96.2
            route_type: 1
            route_short_name: 39A
            geometry: "yuqlH{i~s@gaUe@VgEQFcBRbB_C"
            departure: 2020-01-31T12:45:00+01:00
            stops:
            - planned_departure_time: 2022-07-04T13:22:00Z
              arrival_time: 2022-07-04T13:22:00Z
              predicted_arrival_time: 2022-07-04T13:22:00Z
              arrival_cancelled: false
              stop_id: de:08221:1138:0:O
              name: "Heidelberg, Alois-Link-Platz"
              predicted_departure_time: 2022-07-04T13:22:00Z
              location:
              - 8.6912542
              - 49.399979
              planned_arrival_time: 2022-07-04T13:22:00Z
              departure_time: 2022-07-04T13:22:00Z
              departure_cancelled: false
            - planned_departure_time: 2022-07-04T13:22:00Z
              arrival_time: 2022-07-04T13:22:00Z
              predicted_arrival_time: 2022-07-04T13:22:00Z
              arrival_cancelled: false
              stop_id: de:08221:1138:0:O
              name: "Heidelberg, Alois-Link-Platz"
              predicted_departure_time: 2022-07-04T13:22:00Z
              location:
              - 8.6912542
              - 49.399979
              planned_arrival_time: 2022-07-04T13:22:00Z
              departure_time: 2022-07-04T13:22:00Z
              departure_cancelled: false
            is_in_same_vehicle_as_previous: false
          extras:
            key:
              summary:
              - amount: 23.8
                distance: 123.1
                value: 5
              - amount: 23.8
                distance: 123.1
                value: 5
              values:
              - - 0
                - 3
                - 26
              - - 3
                - 10
                - 12
          geometry: "yuqlH{i~s@gaUe@VgEQFcBRbB_C"
          departure: 2020-01-31T12:45:00+01:00
          segments:
          - duration: 37.7
            descent: 45.2
            ascent: 56.3
            distance: 253
            percentage: 43.2
            avgspeed: 56.3
            steps:
            - duration: 96.2
              exit_number: 2
              exit_bearings:
              - 10
              - 45
              - 60
              distance: 245
              instruction: Turn right onto Berliner StraÃŸe
              name: Berliner StraÃŸe
              type: 1
              maneuver:
                bearing_after: 96
                location:
                - 8.678962
                - 49.407819
                bearing_before: 24
              way_points:
              - 45
              - 48
            - duration: 96.2
              exit_number: 2
              exit_bearings:
              - 10
              - 45
              - 60
              distance: 245
              instruction: Turn right onto Berliner StraÃŸe
              name: Berliner StraÃŸe
              type: 1
              maneuver:
                bearing_after: 96
                location:
                - 8.678962
                - 49.407819
                bearing_before: 24
              way_points:
              - 45
              - 48
            detourfactor: 0.5
          - duration: 37.7
            descent: 45.2
            ascent: 56.3
            distance: 253
            percentage: 43.2
            avgspeed: 56.3
            steps:
            - duration: 96.2
              exit_number: 2
              exit_bearings:
              - 10
              - 45
              - 60
              distance: 245
              instruction: Turn right onto Berliner StraÃŸe
              name: Berliner StraÃŸe
              type: 1
              maneuver:
                bearing_after: 96
                location:
                - 8.678962
                - 49.407819
                bearing_before: 24
              way_points:
              - 45
              - 48
            - duration: 96.2
              exit_number: 2
              exit_bearings:
              - 10
              - 45
              - 60
              distance: 245
              instruction: Turn right onto Berliner StraÃŸe
              name: Berliner StraÃŸe
              type: 1
              maneuver:
                bearing_after: 96
                location:
                - 8.678962
                - 49.407819
                bearing_before: 24
              way_points:
              - 45
              - 48
            detourfactor: 0.5
          way_points:
          - 0
          - 23
        metadata:
          system_message: A message string configured in the service
          engine:
            build_date: 2019-02-07T14:28:11Z
            graph_date: 2019-02-07T14:28:11Z
            version: "8.0"
          service: routing
          query:
            profileName: profileName
            instructions: true
            schedule_rows: 3
            bearings:
            - - 30
              - 20
            - []
            - - 40
              - 20
            language: en
            units: m
            maximum_speed: 90
            options:
              avoid_borders: controlled
            id: my_request
            walking_time: PT30M
            maneuvers: false
            suppress_warnings: false
            elevation: false
            roundabout_exits: false
            schedule_duration: PT30M
            radiuses:
            - 200
            - -1
            - 30
            preference: recommended
            coordinates:
            - - 8.681495
              - 49.41461
            - - 8.686507
              - 49.41943
            - - 8.687872
              - 49.420318
            instructions_format: text
            continue_straight: false
            schedule: true
            extra_info:
            - waytype
            - surface
            ignore_transfers: true
            geometry: true
            attributes:
            - avgspeed
            - percentage
            geometry_simplify: false
            alternative_routes:
              target_count: 2
              weight_factor: 1.6
            skip_segments:
            - 2
            - 4
          attribution: openrouteservice.org | OpenStreetMap contributors
          id: request123
          timestamp: 1549549847974
        bbox:
        - 49.414057
        - 8.680894
        - 49.420514
        - 8.690123
      properties:
        bbox:
          description: Bounding box that covers all returned routes
          example:
          - 49.414057
          - 8.680894
          - 49.420514
          - 8.690123
          items:
            description: Bounding box that covers all returned routes
            format: double
            type: number
          type: array
        routes:
          description: A list of routes returned from the request
          items:
            $ref: '#/components/schemas/JSONIndividualRouteResponse'
          type: array
        metadata:
          $ref: '#/components/schemas/RouteResponseInfo'
      type: object
    JSONSegment:
      description: List containing the segments and its correspoding steps which make
        up the route.
      example:
        duration: 37.7
        descent: 45.2
        ascent: 56.3
        distance: 253
        percentage: 43.2
        avgspeed: 56.3
        steps:
        - duration: 96.2
          exit_number: 2
          exit_bearings:
          - 10
          - 45
          - 60
          distance: 245
          instruction: Turn right onto Berliner StraÃŸe
          name: Berliner StraÃŸe
          type: 1
          maneuver:
            bearing_after: 96
            location:
            - 8.678962
            - 49.407819
            bearing_before: 24
          way_points:
          - 45
          - 48
        - duration: 96.2
          exit_number: 2
          exit_bearings:
          - 10
          - 45
          - 60
          distance: 245
          instruction: Turn right onto Berliner StraÃŸe
          name: Berliner StraÃŸe
          type: 1
          maneuver:
            bearing_after: 96
            location:
            - 8.678962
            - 49.407819
            bearing_before: 24
          way_points:
          - 45
          - 48
        detourfactor: 0.5
      properties:
        distance:
          description: Contains the distance of the segment in specified units.
          example: 253
          format: double
          type: number
        duration:
          description: Contains the duration of the segment in seconds.
          example: 37.7
          format: double
          type: number
        steps:
          description: List containing the specific steps the segment consists of.
          items:
            $ref: '#/components/schemas/JSONStep'
          type: array
        detourfactor:
          description: Contains the deviation compared to a straight line that would
            have the factor `1`. Double the Distance would be a `2`.
          example: 0.5
          format: double
          type: number
          x-validWhen:
            ref: attributes
            valueContains: detourfactor
        percentage:
          description: Contains the proportion of the route in percent.
          example: 43.2
          format: double
          type: number
          x-validWhen:
            ref: attributes
            valueContains: percentage
        avgspeed:
          description: Contains the average speed of this segment in km/h.
          example: 56.3
          format: double
          type: number
          x-validWhen:
            ref: attributes
            valueContains: avgspeed
        ascent:
          description: ' Contains ascent of this segment in metres.'
          example: 56.3
          format: double
          type: number
          x-validWhen:
            ref: elevation
            value: true
        descent:
          description: Contains descent of this segment in metres.
          example: 45.2
          format: double
          type: number
      type: object
    JSONStep:
      description: Step of a route segment
      example:
        duration: 96.2
        exit_number: 2
        exit_bearings:
        - 10
        - 45
        - 60
        distance: 245
        instruction: Turn right onto Berliner StraÃŸe
        name: Berliner StraÃŸe
        type: 1
        maneuver:
          bearing_after: 96
          location:
          - 8.678962
          - 49.407819
          bearing_before: 24
        way_points:
        - 45
        - 48
      properties:
        distance:
          description: The distance for the step in metres.
          example: 245
          format: double
          type: number
        duration:
          description: The duration for the step in seconds.
          example: 96.2
          format: double
          type: number
        type:
          description: "The [instruction](https://giscience.github.io/openrouteservice/api-reference/endpoints/directions/instruction-types)\
            \ action for symbolisation purposes."
          example: 1
          format: int32
          type: integer
        instruction:
          description: The routing instruction text for the step.
          example: Turn right onto Berliner StraÃŸe
          type: string
        name:
          description: The name of the next street.
          example: Berliner StraÃŸe
          type: string
        exit_number:
          description: Only for roundabouts. Contains the number of the exit to take.
          example: 2
          format: int32
          type: integer
        exit_bearings:
          description: Contains the bearing of the entrance and all passed exits in
            a roundabout.
          example:
          - 10
          - 45
          - 60
          items:
            description: Contains the bearing of the entrance and all passed exits
              in a roundabout.
            format: int32
            type: integer
            x-validWhen:
              ref: roundabout_exits
              value: true
          type: array
          x-validWhen:
            ref: roundabout_exits
            value: true
        way_points:
          description: List containing the indices of the steps start- and endpoint
            corresponding to the *geometry*.
          example:
          - 45
          - 48
          items:
            description: List containing the indices of the steps start- and endpoint
              corresponding to the *geometry*.
            format: int32
            type: integer
          type: array
        maneuver:
          $ref: '#/components/schemas/JSONStepManeuver'
      type: object
    JSONStepManeuver:
      description: Maneuver object of the step
      example:
        bearing_after: 96
        location:
        - 8.678962
        - 49.407819
        bearing_before: 24
      properties:
        location:
          description: The coordinate of the point where a maneuver takes place.
          example:
          - 8.678962
          - 49.407819
          items:
            description: The coordinate of the point where a maneuver takes place.
            format: double
            type: number
          type: array
        bearing_before:
          description: The azimuth angle (in degrees) of the direction right before
            the maneuver.
          example: 24
          format: int32
          type: integer
        bearing_after:
          description: The azimuth angle (in degrees) of the direction right after
            the maneuver.
          example: 96
          format: int32
          type: integer
      type: object
      x-validWhen:
        ref: maneuvers
        value: true
    JSONSummary:
      description: "Contains total sums of duration, route distance and actual distance\
        \ of the route."
      example:
        duration: 604
        descent: 201.3
        fare: 6
        ascent: 166.3
        distance: 12.6
        transfers: 0
      properties:
        distance:
          description: Total route distance in specified units.
          example: 12.6
          format: double
          type: number
        duration:
          description: Total duration in seconds.
          example: 604
          format: double
          type: number
        ascent:
          description: Total ascent in meters.
          example: 166.3
          format: double
          type: number
          x-validWhen:
            ref: elevation
            value: true
        descent:
          description: Total descent in meters.
          example: 201.3
          format: double
          type: number
          x-validWhen:
            ref: elevation
            value: true
        transfers:
          format: int32
          type: integer
        fare:
          format: int32
          type: integer
      type: object
    RouteResponseInfo:
      description: Information about the request
      example:
        system_message: A message string configured in the service
        engine:
          build_date: 2019-02-07T14:28:11Z
          graph_date: 2019-02-07T14:28:11Z
          version: "8.0"
        service: routing
        query:
          profileName: profileName
          instructions: true
          schedule_rows: 3
          bearings:
          - - 30
            - 20
          - []
          - - 40
            - 20
          language: en
          units: m
          maximum_speed: 90
          options:
            avoid_borders: controlled
          id: my_request
          walking_time: PT30M
          maneuvers: false
          suppress_warnings: false
          elevation: false
          roundabout_exits: false
          schedule_duration: PT30M
          radiuses:
          - 200
          - -1
          - 30
          preference: recommended
          coordinates:
          - - 8.681495
            - 49.41461
          - - 8.686507
            - 49.41943
          - - 8.687872
            - 49.420318
          instructions_format: text
          continue_straight: false
          schedule: true
          extra_info:
          - waytype
          - surface
          ignore_transfers: true
          geometry: true
          attributes:
          - avgspeed
          - percentage
          geometry_simplify: false
          alternative_routes:
            target_count: 2
            weight_factor: 1.6
          skip_segments:
          - 2
          - 4
        attribution: openrouteservice.org | OpenStreetMap contributors
        id: request123
        timestamp: 1549549847974
      properties:
        id:
          description: ID of the request (as passed in by the query)
          example: request123
          type: string
        attribution:
          description: Copyright and attribution information
          example: openrouteservice.org | OpenStreetMap contributors
          type: string
        service:
          description: The service that was requested
          example: routing
          type: string
        timestamp:
          description: Time that the request was made (UNIX Epoch time)
          example: 1549549847974
          format: int64
          type: integer
        query:
          $ref: '#/components/schemas/directionsService'
        engine:
          $ref: '#/components/schemas/EngineInfo'
        system_message:
          description: System message
          example: A message string configured in the service
          type: string
      type: object
    gpx:
      properties:
        gpxRouteElements:
          items:
            $ref: '#/components/schemas/rte'
          type: array
      type: object
      xml:
        name: gpx
    rte:
      type: object
      xml:
        name: rte
    GeoJSONRouteResponse:
      properties:
        type:
          type: string
        bbox:
          description: Bounding box that covers all returned routes
          example:
          - 49.414057
          - 8.680894
          - 49.420514
          - 8.690123
          items:
            description: Bounding box that covers all returned routes
            format: double
            type: number
          type: array
        features:
          items:
            type: object
          type: array
        metadata:
          $ref: '#/components/schemas/RouteResponseInfo'
      type: object
    routeOptions_avoid_polygons:
      additionalProperties:
        description: Comprises areas to be avoided for the route. Formatted in GeoJSON
          as either a Polygon or Multipolygon object.
        type: object
      description: Comprises areas to be avoided for the route. Formatted in GeoJSON
        as either a Polygon or Multipolygon object.
      properties:
        empty:
          type: boolean
      type: object
