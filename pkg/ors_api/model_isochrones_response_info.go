/*
Openrouteservice

This is the openrouteservice API documentation for ORS Core-Version 9.0.0. Documentations for [older Core-Versions](https://github.com/GIScience/openrouteservice-docs/releases) can be rendered with the [Swagger-Editor](https://editor-next.swagger.io/).

API version: v2
Contact: support@smartmobility.heigit.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ors

import (
	"encoding/json"
)

// checks if the IsochronesResponseInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IsochronesResponseInfo{}

// IsochronesResponseInfo Information about the request
type IsochronesResponseInfo struct {
	// ID of the request (as passed in by the query)
	Id *string `json:"id,omitempty"`
	// Copyright and attribution information
	Attribution *string `json:"attribution,omitempty"`
	// The service that was requested
	Service *string `json:"service,omitempty"`
	// Time that the request was made (UNIX Epoch time)
	Timestamp *int64 `json:"timestamp,omitempty"`
	Query *IsochronesRequest `json:"query,omitempty"`
	Engine *EngineInfo `json:"engine,omitempty"`
	// System message
	SystemMessage *string `json:"system_message,omitempty"`
}

// NewIsochronesResponseInfo instantiates a new IsochronesResponseInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIsochronesResponseInfo() *IsochronesResponseInfo {
	this := IsochronesResponseInfo{}
	return &this
}

// NewIsochronesResponseInfoWithDefaults instantiates a new IsochronesResponseInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIsochronesResponseInfoWithDefaults() *IsochronesResponseInfo {
	this := IsochronesResponseInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IsochronesResponseInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IsochronesResponseInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IsochronesResponseInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IsochronesResponseInfo) SetId(v string) {
	o.Id = &v
}

// GetAttribution returns the Attribution field value if set, zero value otherwise.
func (o *IsochronesResponseInfo) GetAttribution() string {
	if o == nil || IsNil(o.Attribution) {
		var ret string
		return ret
	}
	return *o.Attribution
}

// GetAttributionOk returns a tuple with the Attribution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IsochronesResponseInfo) GetAttributionOk() (*string, bool) {
	if o == nil || IsNil(o.Attribution) {
		return nil, false
	}
	return o.Attribution, true
}

// HasAttribution returns a boolean if a field has been set.
func (o *IsochronesResponseInfo) HasAttribution() bool {
	if o != nil && !IsNil(o.Attribution) {
		return true
	}

	return false
}

// SetAttribution gets a reference to the given string and assigns it to the Attribution field.
func (o *IsochronesResponseInfo) SetAttribution(v string) {
	o.Attribution = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *IsochronesResponseInfo) GetService() string {
	if o == nil || IsNil(o.Service) {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IsochronesResponseInfo) GetServiceOk() (*string, bool) {
	if o == nil || IsNil(o.Service) {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *IsochronesResponseInfo) HasService() bool {
	if o != nil && !IsNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *IsochronesResponseInfo) SetService(v string) {
	o.Service = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *IsochronesResponseInfo) GetTimestamp() int64 {
	if o == nil || IsNil(o.Timestamp) {
		var ret int64
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IsochronesResponseInfo) GetTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *IsochronesResponseInfo) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int64 and assigns it to the Timestamp field.
func (o *IsochronesResponseInfo) SetTimestamp(v int64) {
	o.Timestamp = &v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *IsochronesResponseInfo) GetQuery() IsochronesRequest {
	if o == nil || IsNil(o.Query) {
		var ret IsochronesRequest
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IsochronesResponseInfo) GetQueryOk() (*IsochronesRequest, bool) {
	if o == nil || IsNil(o.Query) {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *IsochronesResponseInfo) HasQuery() bool {
	if o != nil && !IsNil(o.Query) {
		return true
	}

	return false
}

// SetQuery gets a reference to the given IsochronesRequest and assigns it to the Query field.
func (o *IsochronesResponseInfo) SetQuery(v IsochronesRequest) {
	o.Query = &v
}

// GetEngine returns the Engine field value if set, zero value otherwise.
func (o *IsochronesResponseInfo) GetEngine() EngineInfo {
	if o == nil || IsNil(o.Engine) {
		var ret EngineInfo
		return ret
	}
	return *o.Engine
}

// GetEngineOk returns a tuple with the Engine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IsochronesResponseInfo) GetEngineOk() (*EngineInfo, bool) {
	if o == nil || IsNil(o.Engine) {
		return nil, false
	}
	return o.Engine, true
}

// HasEngine returns a boolean if a field has been set.
func (o *IsochronesResponseInfo) HasEngine() bool {
	if o != nil && !IsNil(o.Engine) {
		return true
	}

	return false
}

// SetEngine gets a reference to the given EngineInfo and assigns it to the Engine field.
func (o *IsochronesResponseInfo) SetEngine(v EngineInfo) {
	o.Engine = &v
}

// GetSystemMessage returns the SystemMessage field value if set, zero value otherwise.
func (o *IsochronesResponseInfo) GetSystemMessage() string {
	if o == nil || IsNil(o.SystemMessage) {
		var ret string
		return ret
	}
	return *o.SystemMessage
}

// GetSystemMessageOk returns a tuple with the SystemMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IsochronesResponseInfo) GetSystemMessageOk() (*string, bool) {
	if o == nil || IsNil(o.SystemMessage) {
		return nil, false
	}
	return o.SystemMessage, true
}

// HasSystemMessage returns a boolean if a field has been set.
func (o *IsochronesResponseInfo) HasSystemMessage() bool {
	if o != nil && !IsNil(o.SystemMessage) {
		return true
	}

	return false
}

// SetSystemMessage gets a reference to the given string and assigns it to the SystemMessage field.
func (o *IsochronesResponseInfo) SetSystemMessage(v string) {
	o.SystemMessage = &v
}

func (o IsochronesResponseInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IsochronesResponseInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Attribution) {
		toSerialize["attribution"] = o.Attribution
	}
	if !IsNil(o.Service) {
		toSerialize["service"] = o.Service
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Query) {
		toSerialize["query"] = o.Query
	}
	if !IsNil(o.Engine) {
		toSerialize["engine"] = o.Engine
	}
	if !IsNil(o.SystemMessage) {
		toSerialize["system_message"] = o.SystemMessage
	}
	return toSerialize, nil
}

type NullableIsochronesResponseInfo struct {
	value *IsochronesResponseInfo
	isSet bool
}

func (v NullableIsochronesResponseInfo) Get() *IsochronesResponseInfo {
	return v.value
}

func (v *NullableIsochronesResponseInfo) Set(val *IsochronesResponseInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableIsochronesResponseInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableIsochronesResponseInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIsochronesResponseInfo(val *IsochronesResponseInfo) *NullableIsochronesResponseInfo {
	return &NullableIsochronesResponseInfo{value: val, isSet: true}
}

func (v NullableIsochronesResponseInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIsochronesResponseInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


