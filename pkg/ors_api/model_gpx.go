/*
Openrouteservice

This is the openrouteservice API documentation for ORS Core-Version 9.0.0. Documentations for [older Core-Versions](https://github.com/GIScience/openrouteservice-docs/releases) can be rendered with the [Swagger-Editor](https://editor-next.swagger.io/).

API version: v2
Contact: support@smartmobility.heigit.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ors

import (
	"encoding/json"
)

// checks if the Gpx type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Gpx{}

// Gpx struct for Gpx
type Gpx struct {
	GpxRouteElements []map[string]interface{} `json:"gpxRouteElements,omitempty"`
}

// NewGpx instantiates a new Gpx object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGpx() *Gpx {
	this := Gpx{}
	return &this
}

// NewGpxWithDefaults instantiates a new Gpx object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGpxWithDefaults() *Gpx {
	this := Gpx{}
	return &this
}

// GetGpxRouteElements returns the GpxRouteElements field value if set, zero value otherwise.
func (o *Gpx) GetGpxRouteElements() []map[string]interface{} {
	if o == nil || IsNil(o.GpxRouteElements) {
		var ret []map[string]interface{}
		return ret
	}
	return o.GpxRouteElements
}

// GetGpxRouteElementsOk returns a tuple with the GpxRouteElements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gpx) GetGpxRouteElementsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.GpxRouteElements) {
		return nil, false
	}
	return o.GpxRouteElements, true
}

// HasGpxRouteElements returns a boolean if a field has been set.
func (o *Gpx) HasGpxRouteElements() bool {
	if o != nil && !IsNil(o.GpxRouteElements) {
		return true
	}

	return false
}

// SetGpxRouteElements gets a reference to the given []map[string]interface{} and assigns it to the GpxRouteElements field.
func (o *Gpx) SetGpxRouteElements(v []map[string]interface{}) {
	o.GpxRouteElements = v
}

func (o Gpx) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Gpx) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GpxRouteElements) {
		toSerialize["gpxRouteElements"] = o.GpxRouteElements
	}
	return toSerialize, nil
}

type NullableGpx struct {
	value *Gpx
	isSet bool
}

func (v NullableGpx) Get() *Gpx {
	return v.value
}

func (v *NullableGpx) Set(val *Gpx) {
	v.value = val
	v.isSet = true
}

func (v NullableGpx) IsSet() bool {
	return v.isSet
}

func (v *NullableGpx) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGpx(val *Gpx) *NullableGpx {
	return &NullableGpx{value: val, isSet: true}
}

func (v NullableGpx) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGpx) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


