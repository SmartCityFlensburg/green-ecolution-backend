/*
Openrouteservice

This is the openrouteservice API documentation for ORS Core-Version 9.0.0. Documentations for [older Core-Versions](https://github.com/GIScience/openrouteservice-docs/releases) can be rendered with the [Swagger-Editor](https://editor-next.swagger.io/).

API version: v2
Contact: support@smartmobility.heigit.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ors

import (
	"encoding/json"
)

// checks if the ProfileParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileParameters{}

// ProfileParameters Specifies additional routing parameters. For all profiles except `driving-car`.
type ProfileParameters struct {
	Weightings *ProfileWeightings `json:"weightings,omitempty"`
	Restrictions *Restrictions `json:"restrictions,omitempty"`
	// Specifies whether to enforce that only ways with known information on surface quality be taken into account - default false
	SurfaceQualityKnown *bool `json:"surface_quality_known,omitempty"`
	// Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default false
	AllowUnsuitable *bool `json:"allow_unsuitable,omitempty"`
}

// NewProfileParameters instantiates a new ProfileParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileParameters() *ProfileParameters {
	this := ProfileParameters{}
	return &this
}

// NewProfileParametersWithDefaults instantiates a new ProfileParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileParametersWithDefaults() *ProfileParameters {
	this := ProfileParameters{}
	return &this
}

// GetWeightings returns the Weightings field value if set, zero value otherwise.
func (o *ProfileParameters) GetWeightings() ProfileWeightings {
	if o == nil || IsNil(o.Weightings) {
		var ret ProfileWeightings
		return ret
	}
	return *o.Weightings
}

// GetWeightingsOk returns a tuple with the Weightings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileParameters) GetWeightingsOk() (*ProfileWeightings, bool) {
	if o == nil || IsNil(o.Weightings) {
		return nil, false
	}
	return o.Weightings, true
}

// HasWeightings returns a boolean if a field has been set.
func (o *ProfileParameters) HasWeightings() bool {
	if o != nil && !IsNil(o.Weightings) {
		return true
	}

	return false
}

// SetWeightings gets a reference to the given ProfileWeightings and assigns it to the Weightings field.
func (o *ProfileParameters) SetWeightings(v ProfileWeightings) {
	o.Weightings = &v
}

// GetRestrictions returns the Restrictions field value if set, zero value otherwise.
func (o *ProfileParameters) GetRestrictions() Restrictions {
	if o == nil || IsNil(o.Restrictions) {
		var ret Restrictions
		return ret
	}
	return *o.Restrictions
}

// GetRestrictionsOk returns a tuple with the Restrictions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileParameters) GetRestrictionsOk() (*Restrictions, bool) {
	if o == nil || IsNil(o.Restrictions) {
		return nil, false
	}
	return o.Restrictions, true
}

// HasRestrictions returns a boolean if a field has been set.
func (o *ProfileParameters) HasRestrictions() bool {
	if o != nil && !IsNil(o.Restrictions) {
		return true
	}

	return false
}

// SetRestrictions gets a reference to the given Restrictions and assigns it to the Restrictions field.
func (o *ProfileParameters) SetRestrictions(v Restrictions) {
	o.Restrictions = &v
}

// GetSurfaceQualityKnown returns the SurfaceQualityKnown field value if set, zero value otherwise.
func (o *ProfileParameters) GetSurfaceQualityKnown() bool {
	if o == nil || IsNil(o.SurfaceQualityKnown) {
		var ret bool
		return ret
	}
	return *o.SurfaceQualityKnown
}

// GetSurfaceQualityKnownOk returns a tuple with the SurfaceQualityKnown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileParameters) GetSurfaceQualityKnownOk() (*bool, bool) {
	if o == nil || IsNil(o.SurfaceQualityKnown) {
		return nil, false
	}
	return o.SurfaceQualityKnown, true
}

// HasSurfaceQualityKnown returns a boolean if a field has been set.
func (o *ProfileParameters) HasSurfaceQualityKnown() bool {
	if o != nil && !IsNil(o.SurfaceQualityKnown) {
		return true
	}

	return false
}

// SetSurfaceQualityKnown gets a reference to the given bool and assigns it to the SurfaceQualityKnown field.
func (o *ProfileParameters) SetSurfaceQualityKnown(v bool) {
	o.SurfaceQualityKnown = &v
}

// GetAllowUnsuitable returns the AllowUnsuitable field value if set, zero value otherwise.
func (o *ProfileParameters) GetAllowUnsuitable() bool {
	if o == nil || IsNil(o.AllowUnsuitable) {
		var ret bool
		return ret
	}
	return *o.AllowUnsuitable
}

// GetAllowUnsuitableOk returns a tuple with the AllowUnsuitable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileParameters) GetAllowUnsuitableOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowUnsuitable) {
		return nil, false
	}
	return o.AllowUnsuitable, true
}

// HasAllowUnsuitable returns a boolean if a field has been set.
func (o *ProfileParameters) HasAllowUnsuitable() bool {
	if o != nil && !IsNil(o.AllowUnsuitable) {
		return true
	}

	return false
}

// SetAllowUnsuitable gets a reference to the given bool and assigns it to the AllowUnsuitable field.
func (o *ProfileParameters) SetAllowUnsuitable(v bool) {
	o.AllowUnsuitable = &v
}

func (o ProfileParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Weightings) {
		toSerialize["weightings"] = o.Weightings
	}
	if !IsNil(o.Restrictions) {
		toSerialize["restrictions"] = o.Restrictions
	}
	if !IsNil(o.SurfaceQualityKnown) {
		toSerialize["surface_quality_known"] = o.SurfaceQualityKnown
	}
	if !IsNil(o.AllowUnsuitable) {
		toSerialize["allow_unsuitable"] = o.AllowUnsuitable
	}
	return toSerialize, nil
}

type NullableProfileParameters struct {
	value *ProfileParameters
	isSet bool
}

func (v NullableProfileParameters) Get() *ProfileParameters {
	return v.value
}

func (v *NullableProfileParameters) Set(val *ProfileParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileParameters(val *ProfileParameters) *NullableProfileParameters {
	return &NullableProfileParameters{value: val, isSet: true}
}

func (v NullableProfileParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


