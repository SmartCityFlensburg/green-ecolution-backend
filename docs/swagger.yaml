definitions:
  AppInfo:
    properties:
      buildTime:
        type: string
      git:
        $ref: '#/definitions/GitInfo'
      goVersion:
        type: string
      server:
        $ref: '#/definitions/ServerInfo'
      version:
        type: string
    required:
    - buildTime
    - git
    - goVersion
    - server
    - version
    type: object
  GitInfo:
    properties:
      branch:
        type: string
      commit:
        type: string
      repository:
        type: string
    required:
    - branch
    - commit
    - repository
    type: object
  HTTPError:
    properties:
      code:
        type: integer
      error:
        type: string
      method:
        type: string
      path:
        type: string
    required:
    - code
    - error
    - method
    - path
    type: object
  MqttDecodedPayload:
    properties:
      battery:
        type: number
      humidity:
        type: integer
      raw:
        type: integer
    required:
    - battery
    - humidity
    - raw
    type: object
  MqttIdentifierApplicationID:
    properties:
      application_id:
        type: string
    required:
    - application_id
    type: object
  MqttIdentifierDeviceID:
    properties:
      application_ids:
        $ref: '#/definitions/MqttIdentifierApplicationID'
      dev_addr:
        type: string
      dev_eui:
        type: string
      device_id:
        type: string
      join_eui:
        type: string
    required:
    - application_ids
    - dev_addr
    - dev_eui
    - device_id
    - join_eui
    type: object
  MqttLocation:
    properties:
      altitude:
        type: number
      latitude:
        type: number
      longitude:
        type: number
    required:
    - altitude
    - latitude
    - longitude
    type: object
  MqttNetworkIDs:
    properties:
      cluster_address:
        type: string
      cluster_id:
        type: string
      net_id:
        type: string
      nsid:
        type: string
      tenant_address:
        type: string
      tenant_id:
        type: string
    required:
    - cluster_address
    - cluster_id
    - net_id
    - nsid
    - tenant_address
    - tenant_id
    type: object
  MqttPayload:
    properties:
      correlation_ids:
        items:
          type: string
        type: array
      end_device_ids:
        $ref: '#/definitions/MqttIdentifierDeviceID'
      received_at:
        type: string
      uplink_message:
        $ref: '#/definitions/MqttUplinkMessage'
    required:
    - correlation_ids
    - end_device_ids
    - received_at
    - uplink_message
    type: object
  MqttRxMetadata:
    properties:
      channel_rssi:
        type: integer
      gateway_ids:
        $ref: '#/definitions/MqttRxMetadataGatewayIDs'
      location:
        $ref: '#/definitions/MqttLocation'
      packet_broker:
        $ref: '#/definitions/MqttRxMetadataPacketBroker'
      recieved_at:
        type: string
      rssi:
        type: integer
      snr:
        type: number
      time:
        type: string
      uplink_token:
        type: string
    required:
    - channel_rssi
    - gateway_ids
    - location
    - packet_broker
    - recieved_at
    - rssi
    - snr
    - time
    - uplink_token
    type: object
  MqttRxMetadataGatewayIDs:
    properties:
      gateway_id:
        type: string
    required:
    - gateway_id
    type: object
  MqttRxMetadataPacketBroker:
    properties:
      forwarder_cluster_id:
        type: string
      forwarder_gateway_eui:
        type: string
      forwarder_gateway_id:
        type: string
      forwarder_net_id:
        type: string
      forwarder_tenant_id:
        type: string
      home_network_cluster_id:
        type: string
      home_network_net_id:
        type: string
      home_network_tenant_id:
        type: string
      message_id:
        type: string
    required:
    - forwarder_cluster_id
    - forwarder_gateway_eui
    - forwarder_gateway_id
    - forwarder_net_id
    - forwarder_tenant_id
    - home_network_cluster_id
    - home_network_net_id
    - home_network_tenant_id
    - message_id
    type: object
  MqttUplinkMessage:
    properties:
      confirmed:
        type: boolean
      consumed_airtime:
        type: string
      decoded_payload:
        $ref: '#/definitions/MqttDecodedPayload'
      f_port:
        type: integer
      fcnt:
        type: integer
      frm_payload:
        type: string
      network_ids:
        $ref: '#/definitions/MqttNetworkIDs'
      received_at:
        type: string
      rx_metadata:
        items:
          $ref: '#/definitions/MqttRxMetadata'
        type: array
      session_key_id:
        type: string
      settings:
        $ref: '#/definitions/MqttUplinkSettings'
      version_ids:
        $ref: '#/definitions/MqttVersionIDs'
    required:
    - confirmed
    - consumed_airtime
    - decoded_payload
    - f_port
    - fcnt
    - frm_payload
    - network_ids
    - received_at
    - rx_metadata
    - session_key_id
    - settings
    - version_ids
    type: object
  MqttUplinkSettings:
    properties:
      data_rate:
        $ref: '#/definitions/MqttUplinkSettingsDataRate'
      frequency:
        type: string
    required:
    - data_rate
    - frequency
    type: object
  MqttUplinkSettingsDataRate:
    properties:
      lora:
        $ref: '#/definitions/MqttUplinkSettingsLora'
    required:
    - lora
    type: object
  MqttUplinkSettingsLora:
    properties:
      bandwidth:
        type: integer
      coding_rate:
        type: string
      spreading_factor:
        type: integer
    required:
    - bandwidth
    - coding_rate
    - spreading_factor
    type: object
  MqttVersionIDs:
    properties:
      band_id:
        type: string
      brand_id:
        type: string
      firmware_version:
        type: string
      hardware_version:
        type: string
      model_id:
        type: string
    required:
    - band_id
    - brand_id
    - firmware_version
    - hardware_version
    - model_id
    type: object
  PredictedHealth:
    enum:
    - good
    - moderate
    - bad
    type: string
    x-enum-varnames:
    - HealthGood
    - HealthModerate
    - HealthBad
  SensorPrediction:
    properties:
      health:
        $ref: '#/definitions/PredictedHealth'
      humidity:
        type: integer
      sensor_id:
        type: string
      tree:
        $ref: '#/definitions/Tree'
    required:
    - health
    - humidity
    - sensor_id
    - tree
    type: object
  ServerInfo:
    properties:
      arch:
        type: string
      hostname:
        type: string
      interface:
        type: string
      ip:
        type: string
      os:
        type: string
      port:
        type: integer
      uptime:
        type: string
      url:
        type: string
    required:
    - arch
    - hostname
    - interface
    - ip
    - os
    - port
    - uptime
    - url
    type: object
  Tree:
    properties:
      age:
        type: integer
      id:
        type: string
      location:
        $ref: '#/definitions/TreeLocation'
      species:
        type: string
      tree_num:
        type: integer
    required:
    - age
    - id
    - location
    - species
    - tree_num
    type: object
  TreeLocation:
    properties:
      additional_info:
        type: string
      address:
        type: string
      latitude:
        type: number
      longitude:
        type: number
    required:
    - additional_info
    - address
    - latitude
    - longitude
    type: object
  TreeSensorData:
    properties:
      sensor_data:
        items:
          $ref: '#/definitions/MqttPayload'
        type: array
      tree:
        $ref: '#/definitions/Tree'
    required:
    - sensor_data
    - tree
    type: object
  TreeSensorPrediction:
    properties:
      sensor_data:
        items:
          $ref: '#/definitions/MqttPayload'
        type: array
      sensor_prediction:
        $ref: '#/definitions/SensorPrediction'
      tree:
        $ref: '#/definitions/Tree'
    required:
    - sensor_data
    - sensor_prediction
    - tree
    type: object
info:
  contact:
    name: Green Ecolution
    url: https://green-ecolution.de
  description: This is the API for the Green Space Management System. It provides
    endpoints to get information about trees and sensors.
  license:
    name: GPL-3.0
    url: https://raw.githubusercontent.com/SmartCityFlensburg/green-space-management/develop/LICENSE
  termsOfService: http://swagger.io/terms/
  title: Green Space Management API
  version: develop
paths:
  /info:
    get:
      description: Get info about the app and the server
      operationId: get-app-info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AppInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/HTTPError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      summary: Get info about the app
      tags:
      - Info
  /tree:
    get:
      description: Get all trees
      operationId: get-all-trees
      parameters:
      - description: Get raw sensor data for each tree
        in: query
        name: sensor_data
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TreeSensorData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/HTTPError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      summary: Get all trees
      tags:
      - Trees
  /tree/{treeID}:
    get:
      description: Get tree by ID
      operationId: get-tree-by-id
      parameters:
      - description: Tree ID
        in: path
        name: treeID
        required: true
        type: string
      - description: Get raw sensor data for each tree
        in: query
        name: sensor_data
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TreeSensorData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/HTTPError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      summary: Get tree by ID
      tags:
      - Trees
  /tree/{treeID}/prediction:
    get:
      description: Get tree prediction by tree ID
      operationId: get-tree-prediction-by-id
      parameters:
      - description: Tree ID
        in: path
        name: treeID
        required: true
        type: string
      - description: Get raw sensor data for each tree
        in: query
        name: sensor_data
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TreeSensorPrediction'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/HTTPError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      summary: Get tree prediction by tree ID
      tags:
      - Trees
swagger: "2.0"
