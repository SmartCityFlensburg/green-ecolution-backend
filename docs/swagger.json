{
    "swagger": "2.0",
    "info": {
        "description": "This is the API for the Green Space Management System. It provides endpoints to get information about trees and sensors.",
        "title": "Green Space Management API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Green Ecolution",
            "url": "https://green-ecolution.de"
        },
        "license": {
            "name": "GPL-3.0",
            "url": "https://raw.githubusercontent.com/SmartCityFlensburg/green-space-management/develop/LICENSE"
        },
        "version": "develop"
    },
    "paths": {
        "/info": {
            "get": {
                "description": "Get info about the app and the server",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Info"
                ],
                "summary": "Get info about the app",
                "operationId": "get-app-info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GetAppInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/tree": {
            "get": {
                "description": "Get all trees",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trees"
                ],
                "summary": "Get all trees",
                "operationId": "get-all-trees",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Get raw sensor data for each tree",
                        "name": "sensor_data",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TreeSensorDataResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/tree/{treeID}": {
            "get": {
                "description": "Get tree by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trees"
                ],
                "summary": "Get tree by ID",
                "operationId": "get-tree-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tree ID",
                        "name": "treeID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Get raw sensor data for each tree",
                        "name": "sensor_data",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TreeSensorDataResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/tree/{treeID}/prediction": {
            "get": {
                "description": "Get tree prediction by tree ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trees"
                ],
                "summary": "Get tree prediction by tree ID",
                "operationId": "get-tree-prediction-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tree ID",
                        "name": "treeID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Get raw sensor data for each tree",
                        "name": "sensor_data",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TreeSensorPredictionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "GetAppInfoResponse": {
            "type": "object",
            "required": [
                "buildTime",
                "git",
                "goVersion",
                "server",
                "version"
            ],
            "properties": {
                "buildTime": {
                    "type": "string"
                },
                "git": {
                    "$ref": "#/definitions/GitResponse"
                },
                "goVersion": {
                    "type": "string"
                },
                "server": {
                    "$ref": "#/definitions/ServerResponse"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "GitResponse": {
            "type": "object",
            "required": [
                "branch",
                "commit",
                "repository"
            ],
            "properties": {
                "branch": {
                    "type": "string"
                },
                "commit": {
                    "type": "string"
                },
                "repository": {
                    "type": "string"
                }
            }
        },
        "HTTPError": {
            "type": "object",
            "required": [
                "code",
                "error",
                "method",
                "path"
            ],
            "properties": {
                "code": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "ServerResponse": {
            "type": "object",
            "required": [
                "arch",
                "hostname",
                "interface",
                "ip",
                "os",
                "port",
                "uptime",
                "url"
            ],
            "properties": {
                "arch": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "interface": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "uptime": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "TreeSensorDataResponse": {
            "type": "object",
            "required": [
                "sensor_data",
                "tree"
            ],
            "properties": {
                "sensor_data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sensor.MqttData"
                    }
                },
                "tree": {
                    "$ref": "#/definitions/tree.Tree"
                }
            }
        },
        "TreeSensorPredictionResponse": {
            "type": "object",
            "required": [
                "sensor_data",
                "sensor_prediction",
                "tree"
            ],
            "properties": {
                "sensor_data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sensor.MqttData"
                    }
                },
                "sensor_prediction": {
                    "$ref": "#/definitions/tree.SensorPrediction"
                },
                "tree": {
                    "$ref": "#/definitions/tree.Tree"
                }
            }
        },
        "sensor.MqttData": {
            "type": "object",
            "required": [
                "context",
                "correlation_ids",
                "data",
                "identifiers",
                "name",
                "origin",
                "time",
                "unique_id",
                "visibility"
            ],
            "properties": {
                "context": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "correlation_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "data": {
                    "$ref": "#/definitions/sensor.MqttDataPayload"
                },
                "identifiers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sensor.MqttIdentifier"
                    }
                },
                "name": {
                    "type": "string"
                },
                "origin": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "unique_id": {
                    "type": "string"
                },
                "visibility": {
                    "$ref": "#/definitions/sensor.MqttVisibility"
                }
            }
        },
        "sensor.MqttDataPayload": {
            "type": "object",
            "required": [
                "correlation_ids",
                "end_device_ids",
                "received_at",
                "type",
                "uplink_message"
            ],
            "properties": {
                "correlation_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "end_device_ids": {
                    "$ref": "#/definitions/sensor.MqttIdentifierDeviceID"
                },
                "received_at": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "uplink_message": {
                    "$ref": "#/definitions/sensor.MqttUplinkMessage"
                }
            }
        },
        "sensor.MqttDecodedPayload": {
            "type": "object",
            "required": [
                "battery",
                "humidity",
                "raw"
            ],
            "properties": {
                "battery": {
                    "type": "number"
                },
                "humidity": {
                    "type": "integer"
                },
                "raw": {
                    "type": "integer"
                }
            }
        },
        "sensor.MqttIdentifier": {
            "type": "object",
            "required": [
                "device_ids"
            ],
            "properties": {
                "device_ids": {
                    "$ref": "#/definitions/sensor.MqttIdentifierDeviceID"
                }
            }
        },
        "sensor.MqttIdentifierDeviceID": {
            "type": "object",
            "required": [
                "application_ids",
                "dev_addr",
                "dev_eui",
                "device_id",
                "join_eui"
            ],
            "properties": {
                "application_ids": {
                    "type": "object",
                    "required": [
                        "application_id"
                    ],
                    "properties": {
                        "application_id": {
                            "type": "string"
                        }
                    }
                },
                "dev_addr": {
                    "type": "string"
                },
                "dev_eui": {
                    "type": "string"
                },
                "device_id": {
                    "type": "string"
                },
                "join_eui": {
                    "type": "string"
                }
            }
        },
        "sensor.MqttNetworkIDs": {
            "type": "object",
            "required": [
                "cluster_address",
                "cluster_id",
                "net_id",
                "ns_id",
                "tenant_address",
                "tenant_id"
            ],
            "properties": {
                "cluster_address": {
                    "type": "string"
                },
                "cluster_id": {
                    "type": "string"
                },
                "net_id": {
                    "type": "string"
                },
                "ns_id": {
                    "type": "string"
                },
                "tenant_address": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                }
            }
        },
        "sensor.MqttRxMetadata": {
            "type": "object",
            "required": [
                "channel_rssi",
                "gateway_ids",
                "location",
                "packet_broker",
                "received_at",
                "rssi",
                "snr",
                "time",
                "uplink_token"
            ],
            "properties": {
                "channel_rssi": {
                    "type": "integer"
                },
                "gateway_ids": {
                    "type": "object",
                    "required": [
                        "gateway_id"
                    ],
                    "properties": {
                        "gateway_id": {
                            "type": "string"
                        }
                    }
                },
                "location": {
                    "type": "object",
                    "required": [
                        "altitude",
                        "latitude",
                        "longitude"
                    ],
                    "properties": {
                        "altitude": {
                            "type": "number"
                        },
                        "latitude": {
                            "type": "number"
                        },
                        "longitude": {
                            "type": "number"
                        }
                    }
                },
                "packet_broker": {
                    "type": "object",
                    "required": [
                        "forwarder_cluster_id",
                        "forwarder_gateway_eui",
                        "forwarder_gateway_id",
                        "forwarder_net_id",
                        "forwarder_tenant_id",
                        "home_network_cluster_id",
                        "home_network_net_id",
                        "home_network_tenant_id",
                        "message_id"
                    ],
                    "properties": {
                        "forwarder_cluster_id": {
                            "type": "string"
                        },
                        "forwarder_gateway_eui": {
                            "type": "string"
                        },
                        "forwarder_gateway_id": {
                            "type": "string"
                        },
                        "forwarder_net_id": {
                            "type": "string"
                        },
                        "forwarder_tenant_id": {
                            "type": "string"
                        },
                        "home_network_cluster_id": {
                            "type": "string"
                        },
                        "home_network_net_id": {
                            "type": "string"
                        },
                        "home_network_tenant_id": {
                            "type": "string"
                        },
                        "message_id": {
                            "type": "string"
                        }
                    }
                },
                "received_at": {
                    "type": "string"
                },
                "rssi": {
                    "type": "integer"
                },
                "snr": {
                    "type": "number"
                },
                "time": {
                    "type": "string"
                },
                "uplink_token": {
                    "type": "string"
                }
            }
        },
        "sensor.MqttUplinkMessage": {
            "type": "object",
            "required": [
                "confirmed",
                "consumed_airtime",
                "decoded_payload",
                "f_port",
                "fcnt",
                "frm_payload",
                "network_ids",
                "received_at",
                "rx_metadata",
                "session_key_id",
                "settings",
                "version_ids"
            ],
            "properties": {
                "confirmed": {
                    "type": "boolean"
                },
                "consumed_airtime": {
                    "description": "time.Duration",
                    "type": "string"
                },
                "decoded_payload": {
                    "$ref": "#/definitions/sensor.MqttDecodedPayload"
                },
                "f_port": {
                    "type": "integer"
                },
                "fcnt": {
                    "type": "integer"
                },
                "frm_payload": {
                    "type": "string"
                },
                "network_ids": {
                    "$ref": "#/definitions/sensor.MqttNetworkIDs"
                },
                "received_at": {
                    "type": "string"
                },
                "rx_metadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sensor.MqttRxMetadata"
                    }
                },
                "session_key_id": {
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/sensor.MqttUplinkSettings"
                },
                "version_ids": {
                    "$ref": "#/definitions/sensor.MqttVersionIDs"
                }
            }
        },
        "sensor.MqttUplinkSettings": {
            "type": "object",
            "required": [
                "data_rate",
                "frequency"
            ],
            "properties": {
                "data_rate": {
                    "type": "object",
                    "required": [
                        "lora"
                    ],
                    "properties": {
                        "lora": {
                            "type": "object",
                            "required": [
                                "bandwidth",
                                "coding_rate",
                                "spreading_factor"
                            ],
                            "properties": {
                                "bandwidth": {
                                    "type": "integer"
                                },
                                "coding_rate": {
                                    "type": "string"
                                },
                                "spreading_factor": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "frequency": {
                    "type": "string"
                }
            }
        },
        "sensor.MqttVersionIDs": {
            "type": "object",
            "required": [
                "band_id",
                "brand_id",
                "firmware_version",
                "hardware_version",
                "model_id"
            ],
            "properties": {
                "band_id": {
                    "type": "string"
                },
                "brand_id": {
                    "type": "string"
                },
                "firmware_version": {
                    "type": "string"
                },
                "hardware_version": {
                    "type": "string"
                },
                "model_id": {
                    "type": "string"
                }
            }
        },
        "sensor.MqttVisibility": {
            "type": "object",
            "required": [
                "rights"
            ],
            "properties": {
                "rights": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "tree.Location": {
            "type": "object",
            "required": [
                "additional_info",
                "address",
                "lat",
                "lon"
            ],
            "properties": {
                "additional_info": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "lat": {
                    "type": "number"
                },
                "lon": {
                    "type": "number"
                }
            }
        },
        "tree.PredictedHealth": {
            "type": "string",
            "enum": [
                "good",
                "moderate",
                "bad"
            ],
            "x-enum-varnames": [
                "HealthGood",
                "HealthModerate",
                "HealthBad"
            ]
        },
        "tree.SensorPrediction": {
            "type": "object",
            "required": [
                "humidity",
                "predicted_health",
                "sensor_id",
                "tree"
            ],
            "properties": {
                "humidity": {
                    "type": "integer"
                },
                "predicted_health": {
                    "$ref": "#/definitions/tree.PredictedHealth"
                },
                "sensor_id": {
                    "type": "string"
                },
                "tree": {
                    "$ref": "#/definitions/tree.Tree"
                }
            }
        },
        "tree.Tree": {
            "type": "object",
            "required": [
                "age",
                "id",
                "location",
                "species",
                "tree_num"
            ],
            "properties": {
                "age": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/tree.Location"
                },
                "species": {
                    "type": "string"
                },
                "tree_num": {
                    "type": "integer"
                }
            }
        }
    }
}